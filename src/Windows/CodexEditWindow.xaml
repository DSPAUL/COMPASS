<Window x:Class="COMPASS.Windows.CodexEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:models ="clr-namespace:COMPASS.Models"
        xmlns:converters ="clr-namespace:COMPASS.Converters"
        xmlns:tools ="clr-namespace:COMPASS.Tools" 
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:viewmodels="clr-namespace:COMPASS.ViewModels" 
        xmlns:blackPearl="clr-namespace:BlackPearl.Controls.CoreLibrary"
        xmlns:dd="urn:gong-wpf-dragdrop"
        d:DataContext="{d:DesignInstance Type=viewmodels:CodexEditViewModel}"
        mc:Ignorable="d"
        Title="Item Properties" Height="500" Width="1200" FontSize="16" 
        WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterScreen" 
        Foreground="{StaticResource TextColor}" Background="{StaticResource WindowBackground}" MouseDown="MainGrid_MouseDown">
    <Window.Resources>
        <converters:UriToBitmapConverter x:Key="UriToBitmapConverter" />
    </Window.Resources>

    <Grid Name="MainGrid" Focusable="True" Margin="5,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height ="10"/>
            <RowDefinition Height ="auto"/>
            <RowDefinition Height ="*"/>
            <RowDefinition Height ="auto" MinHeight="50"/>
            <RowDefinition Height ="10"/>
        </Grid.RowDefinitions>

        <Grid.Resources>
            <ControlTemplate x:Key="Btn" TargetType="Button">
                <Border Background="{TemplateBinding Background}" CornerRadius="5" Margin="3">
                    <ContentPresenter Margin="7,2" HorizontalAlignment="Center"/>
                </Border>
            </ControlTemplate>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                <Setter Property="Margin" Value="3,0"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource TransparentBlack}"/>
                <Setter Property="Foreground" Value ="{StaticResource TextMutedColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextColor}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Template" Value="{StaticResource  Btn}"/>
            </Style>
            <HierarchicalDataTemplate x:Key="RegularTag" DataType="{x:Type models:TreeViewNode}" ItemsSource="{Binding Children}">
                <Border CornerRadius="5" Margin="0,3">
                    <Border.Background>
                        <SolidColorBrush Color="{Binding Tag.BackgroundColor}"/>
                    </Border.Background>
                    <CheckBox Margin="5,0,0,0" Command="{Binding Path=DataContext.TagCheckCommand,
                                       RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}"
                                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                       IsChecked="{Binding Selected, Mode=TwoWay}" 
                                  Content="{Binding Tag.Content}" Foreground="{StaticResource TextColor}"/>
                </Border>
            </HierarchicalDataTemplate>
            <tools:TagTemplateSelector x:Key="TagTemplateSelector"/>
        </Grid.Resources>
        <TextBlock Grid.Column="0" Grid.Row="1" Text="Cover/Preview:" HorizontalAlignment="Center"
                   Foreground="{StaticResource TextMutedColor}" Typography.Capitals="AllSmallCaps"
                   FontWeight="Light" FontSize="20"/>
        <Image Grid.Column="0" Grid.Row="2" x:Name="CoverIm" Margin="10" Width="300"
               Visibility="{Binding ShowLoading, UpdateSourceTrigger=PropertyChanged, 
            Converter={StaticResource ToVisibilityConverter}, ConverterParameter=True}"
                dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}">
            <Image.Source>
                <Binding Path="TempCodex.CoverArt" Converter="{StaticResource UriToBitmapConverter}" 
                         TargetNullValue="Media\CoverPlaceholder.png">
                    <Binding.ConverterParameter>
                        <sys:Boolean>true</sys:Boolean>
                        <!-- parameter tells converter to return full res version -->
                    </Binding.ConverterParameter>
                </Binding>
            </Image.Source>
        </Image>
        <Image Grid.Column="0" Grid.Row="2" Margin="10" Width="150" Height="150"
               gif:ImageBehavior.AnimatedSource="../Media/LoadingAnimation.gif" 
               Visibility="{Binding ShowLoading, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ToVisibilityConverter}}"/>

        <StackPanel Grid.Column="0" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="Renew" tools:AP.IconKind="ImageSyncOutline" Margin="5,0" 
                    ToolTip="Renews the preview for this item, overwriting the current preview."
                Command="{Binding FetchCoverCommand}" Style="{StaticResource IconTextButton}" />
            <Button Content="Browse..." tools:AP.IconKind="BookImage" Margin="5,0"
                    ToolTip="Choose an image to use as cover/preview for this item."
                Command="{Binding ChooseCoverCommand}" Style="{StaticResource IconTextButton}"/>
        </StackPanel>

        <!--Invisible thumbnail here as well so it loads and changes if cover changes -->
        <Image Grid.Column="0" Grid.Row="1" Grid.RowSpan="4" x:Name="ThumbnailIm" Margin="10,0" Width="0">
            <Image.Source>
                <Binding Path="TempCodex.Thumbnail" Converter="{StaticResource UriToBitmapConverter}" 
                         TargetNullValue="Media\CoverPlaceholder.png">
                    <Binding.ConverterParameter>
                        <sys:Boolean>true</sys:Boolean>
                    </Binding.ConverterParameter>
                </Binding>
            </Image.Source>
        </Image>

        <Rectangle Grid.Column="1" Grid.Row="1" Grid.RowSpan="3" Fill="{StaticResource Separator}" Width="3" Margin="10,0"/>
        
        <TabControl Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Background="{x:Null}" BorderThickness="0,1,0,0"
                    Padding="0,5">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Setter Property="MaxWidth" Value="300"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="TabBorder" CornerRadius="2,2,0,0" Margin="0,-1,0,0">
                                    <ContentPresenter VerticalAlignment="Center" ContentSource="Header" Margin="5,0,10,0"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="TabBorder" Property="Background" Value="{x:Null}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="TabBorder" Property="Background" Value="{StaticResource TabFocus}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="General">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                            <RowDefinition Height ="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Title:" Grid.Row="1" Margin="3,5,3,3"/>
                        <TextBox Text="{Binding TempCodex.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Grid.Row="2" Padding="5,0"/>

                        <TextBlock Text="Sorting Title:" Grid.Row="3" Margin="3,5,3,3"/>
                        <TextBox Text="{Binding TempCodex.SortingTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Grid.Row="4" Padding="5,0"/>

                        <TextBlock Text="Authors:" Grid.Row="5" Margin="3,5,3,3"/>
                        <blackPearl:MultiSelectCombobox x:Name="AuthorsComboBox" Template="{StaticResource Default}"
                                                    Grid.Row="6" ItemSeparator="," LookUpContract="{Binding Contract}"
                                                    ItemSource="{Binding MVM.CollectionVM.FilterVM.AuthorList}" 
                                                    SelectedItems="{Binding TempCodex.Authors, Mode=TwoWay}"/>

                        <TextBlock Text="Publisher:" Grid.Row="7" Margin="3,5,3,3"/>
                        <ComboBox Text="{Binding TempCodex.Publisher, Mode=TwoWay}" Grid.Row="8"
                                  IsEditable="True" Background="{x:Null}" BorderBrush="{x:Null}" 
                                  ItemsSource="{Binding MVM.CollectionVM.FilterVM.PublisherList}"/>

                        <Grid Grid.Row="9" Margin="0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="1.5*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Version:" Grid.Column="0" Grid.Row="0"/>
                            <TextBox Text="{Binding TempCodex.Version, Mode=TwoWay}" Margin="5,0"  Grid.Column="1" Grid.Row="0"/>

                            <TextBlock Text="Release Date:" Grid.Column="3" Grid.Row="0"/>
                            <DatePicker SelectedDate="{Binding TempCodex.ReleaseDate, TargetNullValue={x:Null}, FallbackValue={x:Null}}"
                                    Grid.Column="4" Grid.Row="0"/>

                            <TextBlock Text="PageCount:"  Grid.Column="0" Grid.Row="1"/>
                            <TextBox Text="{Binding TempCodex.PageCount, Mode=TwoWay}" MinWidth="30" Margin="5"  Grid.Column="1" Grid.Row="1"/>

                            <TextBlock Text="Hard Copy:" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="2" Margin="3,0,3,0"/>
                            <CheckBox IsChecked="{Binding TempCodex.PhysicallyOwned, Mode=TwoWay}" VerticalAlignment="Bottom"
                                      Grid.Column="1" Grid.Row="2" Margin="2,0"/>

                            <TextBlock Text="Rating:"  Grid.Column="3" Grid.Row="1"/>
                            <materialDesign:RatingBar Value="{Binding TempCodex.Rating, Mode=TwoWay}" Margin="5"  Grid.Column="4" Grid.Row="1"/>

                            <TextBlock Text="Favorite:" VerticalAlignment="Stretch" Grid.Column="3" Grid.Row="2" Margin="3,0,3,0"/>
                            <CheckBox IsChecked="{Binding TempCodex.Favorite, Mode=TwoWay}" VerticalAlignment="Bottom"
                                      Grid.Column="4" Grid.Row="2" Margin="2,0"/>

                        </Grid>

                        <StackPanel Orientation="Horizontal" Grid.Row="10">
                            <TextBlock Text="Tags:"/>
                            <ItemsControl ItemsSource="{Binding TempCodex.Tags}" Background="{x:Null}" BorderBrush="{x:Null}" 
                                Foreground="Black" FontSize="15" VerticalAlignment="Center" 
                                ItemTemplate="{StaticResource TagTemplate}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </StackPanel>
                    </Grid>
                    <Rectangle Grid.Column="1" Fill="{StaticResource Separator}" Width="3" Margin="10,0"/>

                    <ScrollViewer Grid.Column="2" MaxHeight="360" MaxWidth="300">
                        <StackPanel>
                            <TreeView x:Name="TagSelection" ItemsSource="{Binding TreeViewSource}" 
                                  MinWidth="200" PreviewMouseWheel="treeView_PreviewMouseWheel"
                                  BorderBrush="{x:Null}" Background="{x:Null}" ItemTemplateSelector="{StaticResource TagTemplateSelector}">
                                <TreeView.Resources>
                                    <Style TargetType="{x:Type TreeViewItem}">
                                        <Setter Property="IsExpanded" Value="{Binding Expanded}"/>
                                        <Setter Property="Focusable" Value="False"/>
                                    </Style>
                                </TreeView.Resources>
                            </TreeView>
                            <Button Command="{Binding QuickCreateTagCommand}" Cursor="Hand" Margin="20,5">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Border BorderBrush="{StaticResource Separator}"
                                                BorderThickness="1" CornerRadius="3">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <materialDesign:PackIcon Kind="TagAdd" Height="15"/>
                                                <TextBlock Text="Quick New Tag..." Margin="5" FontSize="14"/>
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                    </ScrollViewer>
                    
                </Grid>
            </TabItem>
            <TabItem Header="Description">
                <TextBox Text="{Binding TempCodex.Description, Mode=TwoWay}" MinHeight="250" 
                         AcceptsReturn="True" TextWrapping="Wrap"/>
            </TabItem>
            <TabItem Header="Sources">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource IconBtn}">
                            <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="7"/>
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                    </Grid.Resources>
                    
                    <TextBlock Text="Path:" Grid.Column="0" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding TempCodex.Path, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" 
                             TextWrapping="Wrap" Padding="3" Margin="10"/>
                    <Button Grid.Row="0" Grid.Column="2" Command="{Binding BrowsePathCommand}" 
                            ToolTip="Choose a new Path..." tools:AP.IconKind="FolderOpen"/>

                    <TextBlock Text="Source URL:" Grid.Column="0" Grid.Row="1"/>
                    <TextBox Text="{Binding TempCodex.SourceURL, Mode=TwoWay}" Grid.Column="1" Grid.Row="1" 
                             TextWrapping="Wrap" Padding="3"  Margin="10" />
                    <Button Grid.Row="1" Grid.Column="2" Command="{Binding BrowseURLCommand}" 
                            ToolTip="Open URL in Browser" tools:AP.IconKind="Compass"/>

                    <TextBlock Text="ISBN:" Grid.Column="0" Grid.Row="2"/>
                    <TextBox Text="{Binding TempCodex.ISBN, Mode=TwoWay}" Grid.Column="1" Grid.Row="2"
                             TextWrapping="Wrap" Padding="3"  Margin="10"/>
                    <Button  Grid.Row="2" Grid.Column="2" Command="{Binding BrowseISBNCommand}" 
                             ToolTip="Show in Open Library"  tools:AP.IconKind="Library"/>
                </Grid>
            </TabItem>
            <TabItem Header="Advanced">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Date Added:" Grid.Column="0" Grid.Row="0"/>
                    <DatePicker SelectedDate="{Binding TempCodex.DateAdded, Mode=OneWay, TargetNullValue={x:Null}, FallbackValue={x:Null}}"
                                    Grid.Column="1" Grid.Row="0"/>

                    <TextBlock Text="Last Opened:" Grid.Column="3" Grid.Row="0"/>
                    <DatePicker SelectedDate="{Binding TempCodex.LastOpened, Mode=OneWay, TargetNullValue={x:Null}, FallbackValue={x:Null}}"
                                Grid.Column="4" Grid.Row="0"/>

                    <TextBlock Text="ID:"  Grid.Column="0" Grid.Row="1"/>
                    <TextBlock Text="{Binding TempCodex.ID}" MinWidth="30" Margin="5"  Grid.Column="1" Grid.Row="1"/>

                    <TextBlock Text="Times Opened:" VerticalAlignment="Stretch" Grid.Column="3" Grid.Row="1" Margin="3,0,3,0"/>
                    <TextBlock Text="{Binding TempCodex.OpenedCount}" MinWidth="30" Margin="5"  Grid.Column="4" Grid.Row="1"/>
                </Grid>
            </TabItem>
        </TabControl>

        <!--#region Confirmation Buttons -->
        <Grid Grid.Column="2" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Remove" tools:AP.IconKind="Delete"
                    Command="{Binding DeleteCodexCommand}" Margin="5"
                    ToolTip="Removes this item from COMPASS"
                    Background="{StaticResource CancelFill}" Style="{StaticResource IconTextButton}"/>
            <Button Grid.Column="2" Content="OK" tools:AP.IconKind="Check" IsDefault="True"
                    Command ="{Binding OKCommand}"  Margin="5"
                    Background="{StaticResource AcceptFill}" Style="{StaticResource IconTextButton}"/>
            <Button Grid.Column="3" Content="Cancel" tools:AP.IconKind="WindowClose"
                    Command="{Binding CancelCommand}" Margin="5"
                    Background="{StaticResource CancelFill}" Style="{StaticResource IconTextButton}"/>
        </Grid>
        <!--#endregion-->
    </Grid>
</Window>
