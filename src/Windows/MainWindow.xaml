<Window
    x:Class="COMPASS.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:views="clr-namespace:COMPASS.Views"
    xmlns:viewmodels="clr-namespace:COMPASS.ViewModels"
    xmlns:models="clr-namespace:COMPASS.Models"
    xmlns:Tools ="clr-namespace:COMPASS.Tools"
    xmlns:Converters ="clr-namespace:COMPASS.Converters"
    d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
    mc:Ignorable="d"
    Title="COMPASS" Height="540" Width="1156.8" FontSize="20"
    Foreground="{StaticResource TextColor}"  Background="{StaticResource WindowBackground}"
    Closing="Window_Closing" WindowState="Maximized" WindowStyle="None" 
    WindowStartupLocation="CenterScreen" MouseDown="Window_MouseDown"
    PreviewKeyDown="Window_PreviewKeyDown">
    <Window.Resources>
        <Converters:WindowStatetoBoolConverter x:Key="IsMaximizedConverter"/>
        <Converters:UriToBitmapConverter x:Key="UriToBitmapConverterr"/>
        <DataTemplate DataType="{x:Type viewmodels:ListLayoutViewModel}">
            <views:ListLayout DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:CardLayoutViewModel}">
            <views:CardLayout DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:TileLayoutViewModel}">
            <views:TileLayout DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:HomeLayoutViewModel}">
            <views:HomeLayout DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:LeftDockViewModel}">
            <views:LeftDockView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:CodexInfoViewModel}">
            <views:CodexInfoView DataContext="{Binding}"/>
        </DataTemplate>
    </Window.Resources>
    <Window.Style>
        <Style>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="40" CornerRadius="4" GlassFrameThickness="0"
                        NonClientFrameEdges="None" ResizeBorderThickness="6"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Border BorderThickness="0">
        <DockPanel Name="MainGrid" Focusable="True">
            <!--#region Title Bar-->
            <Grid DockPanel.Dock="Top" x:Name="WindowsBar" MaxHeight="100" Background="{StaticResource TitlebarBackground}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width ="auto"/>
                    <ColumnDefinition Width ="*"/>
                    <ColumnDefinition Width ="auto"/>
                    <ColumnDefinition Width ="auto"/>
                    <ColumnDefinition Width ="*"/>
                    <ColumnDefinition Width ="auto"/>
                    <ColumnDefinition Width ="auto"/>
                    <ColumnDefinition Width ="auto"/>
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <!--#region Dropdownbox Style-->
                    <ControlTemplate x:Key="RPGArrow" TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.ColumnSpan="3" CornerRadius="4,0,0,4" BorderThickness="0"
                                    Background="{StaticResource UIElementBackground}" ClipToBounds="True" />
                            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource CollectionIconFill}" HorizontalAlignment="Center"
                                 VerticalAlignment="Center" Data="M0,0 L6,8 L12,0 " Margin="0,0,5,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                <Setter TargetName="Arrow" Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                <Setter TargetName="Arrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="1.2" ScaleX="1.2"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style x:Key="RPGDropdownStyle" TargetType="{x:Type ComboBox}">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                        <Setter Property="MinWidth" Value="120"/>
                        <Setter Property="MinHeight" Value="20"/>
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid>
                                        <ToggleButton Template="{StaticResource RPGArrow}" Focusable="false" ClickMode="Press" Style="{x:Null}"
                                                    IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="10,3,25,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                            AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" VerticalOffset="-6">
                                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                <Border x:Name="DropDownBorder" Background="{StaticResource UIElementBackground}" BorderThickness="0" CornerRadius="0,0,4,4"/>
                                                <ScrollViewer Margin="0,6,0,6" SnapsToDevicePixels="True">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="50"/>
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Name="Border" Padding="10,0" SnapsToDevicePixels="true" BorderThickness="0">
                                        <ContentPresenter/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TitlebarElementHoverBackground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--#endregion-->
                </Grid.Resources>

                <ContentControl Content="{StaticResource CompassLogo}" Grid.Column="0" Margin="10,0" HorizontalAlignment="Left"/>

                <!--Search Bar-->
                <Border Grid.Column="2" CornerRadius="4" Width="300" MinWidth="100" Height="35" WindowChrome.IsHitTestVisibleInChrome="True"
                    Background="{StaticResource UIElementBackground}" OpacityMask="#FF222222" Margin="30,5" DataContext="{Binding CollectionVM.FilterVM}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width ="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" x:Name="Searchbox" Tools:AP.PlaceHolderText="Search" Margin="0"
                             Text="{Binding SearchTerm, UpdateSourceTrigger=PropertyChanged}" 
                             Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White"/>
                        <Button  Grid.Column="1" Style="{StaticResource IconBtn}" Margin="10,0" Tools:AP.IconKind="Search"
                        Command="{Binding SearchCommand}" CommandParameter="{Binding Text, ElementName=Searchbox}" 
                                 IsDefault="{Binding ElementName=Searchbox, Path=IsKeyboardFocused}" ToolTip="Search"/>
                    </Grid>
                </Border>

                <!--Collection Selection-->
                <Border Background="{StaticResource UIElementBackground}" CornerRadius="4" Grid.Column="3" Margin="0,5" Height="35"
                        WindowChrome.IsHitTestVisibleInChrome="True" DataContext="{Binding CollectionVM}">
                    <StackPanel Orientation="Horizontal">
                        <ComboBox Style="{StaticResource RPGDropdownStyle}" SelectedItem="{Binding CurrentCollection, Mode=TwoWay}" 
                                  DisplayMemberPath="DirectoryName" ItemsSource="{Binding AllCodexCollections}"/>
                        <Rectangle Fill="{StaticResource Separator}" Width="2" Height="auto"/>
                        <Button Style="{StaticResource IconBtn}" Tools:AP.IconKind="FolderPlus" Foreground="{StaticResource CollectionIconFill}" ToolTip="Create New Collection"
                                            Visibility="{Binding CreateCollectionVisibility,Converter={StaticResource ToVisibilityConverter},ConverterParameter=True}"
                                        Command="{Binding ToggleCreateCollectionCommand}"/>
                        <StackPanel Orientation="Horizontal" x:Name="CollectionCreation"
                                        Visibility="{Binding CreateCollectionVisibility, Converter={StaticResource ToVisibilityConverter}, FallbackValue=Collapsed}">
                            <TextBox x:Name="NewCollectionName" Tools:AP.PlaceHolderText="New Collection" FontSize="16" VerticalAlignment="Center" 
                                             Background="{StaticResource SelectableTransparent}" BorderBrush="{StaticResource DarkUIElementBackground}"
                                            Foreground="{StaticResource TextColor}" Margin="0" BorderThickness="0" MinWidth="80">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=CollectionCreation, Path=IsVisible}" Value="true">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=NewCollectionName}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=CollectionCreation, Path=IsVisible}" Value="false">
                                                <Setter Property="Text" Value=""/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Button Tools:AP.IconKind="Check" Foreground="{StaticResource AcceptFill}" Style="{StaticResource IconBtn}" 
                                            IsDefault="{Binding ElementName=NewCollectionName, Path=IsFocused}"
                                            Command="{Binding CreateCollectionCommand}" CommandParameter="{Binding ElementName=NewCollectionName, Path=Text}">
                            </Button>
                            <Button Tools:AP.IconKind="Close" Foreground="{StaticResource CancelFill}" Command="{Binding ToggleCreateCollectionCommand}"
                                            Style="{StaticResource IconBtn}"/>
                        </StackPanel>
                        <Rectangle Fill="{StaticResource Separator}" Width="2" Height="auto"/>
                        <Button Tools:AP.IconKind="FolderEdit" Foreground="{StaticResource CollectionIconFill}" 
                                    Style="{StaticResource IconBtn}" ToolTip="Rename Collection" Command="{Binding ToggleEditCollectionCommand}"
                                    Visibility="{Binding EditCollectionVisibility,Converter={StaticResource ToVisibilityConverter},ConverterParameter=True}"/>
                        <StackPanel Orientation="Horizontal" x:Name="CollectionEditing"
                                        Visibility="{Binding EditCollectionVisibility, Converter={StaticResource ToVisibilityConverter}, FallbackValue=Collapsed}">
                            <TextBox x:Name="EditCollectionName" Text="{Binding CurrentCollection.DirectoryName, Mode=OneWay}" FontSize="16" 
                                        VerticalAlignment="Center" Background="{StaticResource SelectableTransparent}"
                                        Foreground="{StaticResource TextColor}" Margin="0" BorderThickness="0" MinWidth="50">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=CollectionEditing, Path=IsVisible}" Value="true">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=EditCollectionName}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Button Tools:AP.IconKind="Check" Foreground="{StaticResource AcceptFill}" Style="{StaticResource IconBtn}" 
                                        IsDefault="{Binding ElementName=EditCollectionName, Path=IsFocused}"
                                        Command="{Binding EditCollectionNameCommand}" CommandParameter="{Binding ElementName=EditCollectionName, Path=Text}">
                            </Button>
                            <Button Tools:AP.IconKind="Close" Foreground="{StaticResource CancelFill}" 
                                        Command="{Binding ToggleEditCollectionCommand}" Style="{StaticResource IconBtn}"/>
                        </StackPanel>
                        <Rectangle Fill="{StaticResource Separator}" Width="2" Height="auto"/>
                        <Button Tools:AP.IconKind="FolderRemove" Foreground="{StaticResource CollectionIconFill}" 
                                Style="{StaticResource IconBtn}" Command="{Binding DeleteCollectionCommand}" ToolTip="Delete This Collection"/>
                    </StackPanel>
                </Border>
                
                <!--Settings button-->
                <Button Click="Toggle_ContextMenu" Grid.Column="5" Tools:AP.IconKind="Settings" Height="25" Margin="15,0"
                         WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Settings">
                    <Button.ContextMenu>
                        <ContextMenu Placement="Bottom">
                            <ContextMenu.Resources>
                                <Converters:MultiParamConverter x:Key="MultiParamConverter"/>
                            </ContextMenu.Resources>
                            <MenuItem Header="Preferences" Command="{Binding OpenSettingsCommand}" Tools:AP.IconKind="Cog"/>
                            <MenuItem Header="Check for Updates" Command="{Binding CheckForUpdatesCommand}" Tools:AP.IconKind="Autorenew"/>
                            <MenuItem Header="What's New" Command="{Binding OpenSettingsCommand}" CommandParameter="What's New" Tools:AP.IconKind="AlertDecagram"/>
                            <!--<MenuItem Header="About" Command="{Binding OpenSettingsCommand}" CommandParameter="About"/>-->
                        </ContextMenu>
                    </Button.ContextMenu>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{StaticResource SelectableTransparent}"/>
                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextMutedColor}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <materialDesign:PackIcon Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Foreground="{TemplateBinding Foreground}"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}"
                                        Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!--Internet status indicator-->
                <materialDesign:PackIcon Grid.Column="6" Margin="0" Padding="0" Kind="WebOff" Width="25" Height="25" VerticalAlignment="Center"
                                         Foreground="{StaticResource OfflineFill}" ToolTip="No Internet Connection Found">
                    <materialDesign:PackIcon.Style>
                        <Style TargetType="materialDesign:PackIcon">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsOnline}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsOnline}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </materialDesign:PackIcon.Style>
                </materialDesign:PackIcon>

                <!--Window management (minimize, maximize, close)-->
                <StackPanel Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True"
                HorizontalAlignment="Right" Margin="15,0,0,0"
                VerticalAlignment="Stretch" Grid.Column="7">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}" >
                            <Setter Property="Width" Value="40"/>
                            <Setter Property="Padding" Value="7"/>
                            <Setter Property="Background" Value="{StaticResource SelectableTransparent}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource UIElementBackground}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type ToggleButton}" >
                            <Setter Property="Width" Value="40"/>
                            <Setter Property="Padding" Value="7"/>
                            <Setter Property="Background" Value="{StaticResource SelectableTransparent}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource UIElementBackground}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>

                    <Button x:Name="MinimizeButton" ToolTip="Minimize" Click="MinimizeWindow" BorderBrush="{x:Null}">
                        <materialDesign:PackIcon Kind="WindowMinimize" VerticalAlignment="Bottom"/>
                    </Button>

                    <ToggleButton x:Name="MaximizeButton" Click="MaximizeButton_Click" BorderBrush="{x:Null}" ToolTip="Maximize"
                            IsChecked="{Binding WindowState, RelativeSource={RelativeSource FindAncestor,
            AncestorType=Window}, Converter={StaticResource IsMaximizedConverter}, Mode=OneWay}">
                        <Grid>
                            <materialDesign:PackIcon Kind="WindowMaximize"  x:Name="Maximizeimage" Width="15"
                Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor,
                AncestorType={x:Type ToggleButton}}, Converter={StaticResource ToVisibilityConverter}, ConverterParameter=true}"/>
                            <materialDesign:PackIcon Kind="WindowRestore"  x:Name="NotMaximizeimage" Width="15"
                Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor,
                AncestorType={x:Type ToggleButton}}, Converter={StaticResource ToVisibilityConverter}, ConverterParameter=false}"/>
                        </Grid>
                    </ToggleButton>

                    <Button x:Name="CloseButton" Click="CloseButton_Click" BorderBrush="{x:Null}" ToolTip="Close">
                        <materialDesign:PackIcon Kind="WindowClose"/>
                        <Button.Style>
                            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="Red" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
            <!--#endregion-->

            <!--#region Left Dock-->
            <UserControl DockPanel.Dock="Left" Content="{Binding LeftDockVM}"/>
            <!--#endregion-->

            <!--#region Right Dock-->

            <UserControl DockPanel.Dock="Right" Content="{Binding CodexInfoVM}"/>
            <!--#endregion-->

            <!--#region Main Dock-->
            <Grid x:Name="ViewsGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="15" />
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10"/>
                </Grid.RowDefinitions>

                <!--#region Current Filters-->
                <TextBlock Grid.Column="0" Grid.Row="1" x:Name="CurrentTagTextBlock" Text="Filters:" 
                           Margin="20,0,0,0" VerticalAlignment="Center" FontSize="20"/>
                <Border CornerRadius="5" Grid.Column="1" Grid.Row ="1" BorderBrush="ForestGreen" BorderThickness="3" VerticalAlignment="Center"
                        MinHeight="40" Margin="10,0" Background="{StaticResource FiltersBackground}" DataContext="{Binding CollectionVM.FilterVM}">
                    <Border.Resources>
                        <CollectionViewSource x:Key="Filters" Source="{Binding IncludedFilters}"/>
                        <CollectionViewSource x:Key="Empty" Source="{x:Null}"/>
                    </Border.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="INCLUDE:" VerticalAlignment="Center" Margin="5 2" Foreground="Gray" FontSize="20"/>
                        <ItemsControl x:Name="CurrentTagList" ItemTemplate="{StaticResource TagDeletableTemplate}" MinHeight="30"
                             Grid.Column="1" VerticalContentAlignment="Center" VerticalAlignment="Center" Background="{StaticResource SelectableTransparent}"
                             dd:DragDrop.IsDropTarget="True" dd:DragDrop.IsDragSource="True" dd:DragDrop.DropHandler="{Binding }" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" Width="{Binding ActualWidth, ElementName=CurrentTagList}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemsSource>
                                <CompositeCollection>
                                    <CollectionContainer Collection="{Binding Source={StaticResource Filters}}" />
                                    <CollectionContainer Collection="{Binding Source={StaticResource Empty}}" />
                                </CompositeCollection>
                            </ItemsControl.ItemsSource>
                        </ItemsControl>
                    </Grid>
                    
                </Border>
                <Border CornerRadius="5" Grid.Column="2" Grid.Row ="1" BorderBrush="OrangeRed" BorderThickness="3" VerticalAlignment="Center"
                        MinHeight="40" Margin="10,0" Background="{StaticResource FiltersBackground}"  DataContext="{Binding CollectionVM.FilterVM}">
                    <Border.Resources>
                        <CollectionViewSource x:Key="NegFilters" Source="{Binding ExcludedFilters}"/>
                    </Border.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="EXCLUDE:" VerticalAlignment="Center" Margin="5 2" Foreground="Gray" FontSize="20"/>
                        <ItemsControl x:Name="CurrentExcludedFilterList" ItemTemplate="{StaticResource TagDeletableTemplate}" MinHeight="30"
                             Grid.Column="1" VerticalAlignment="Center" VerticalContentAlignment="Center" Background="{StaticResource SelectableTransparent}"
                            dd:DragDrop.IsDropTarget="True" dd:DragDrop.IsDragSource="True" dd:DragDrop.DropHandler="{Binding}" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" Width="{Binding ActualWidth, ElementName=CurrentExcludedFilterList}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemsSource>
                                <CompositeCollection>
                                    <CollectionContainer Collection="{Binding Source={StaticResource NegFilters}}"/>
                                </CompositeCollection>
                            </ItemsControl.ItemsSource>
                        </ItemsControl>
                    </Grid>
                </Border>
                <Button Command="{Binding CollectionVM.FilterVM.ClearFiltersCommand}" Style="{StaticResource IconBtn}" Tools:AP.IconKind="FilterRemove" 
                        Grid.Column="3" Grid.Row ="1" Width="30" Margin="0" ToolTip="Clear Filters"/>
                <!--#endregion-->

                <!--#region View Selection-->
                <Border Grid.Column="4" Grid.Row="1" Margin="10,0" BorderThickness="0" BorderBrush="Gray" CornerRadius="5">
                    <StackPanel  Orientation="Horizontal" Margin="0,0,15,0">
                        <StackPanel.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="{StaticResource SelectableTransparent}"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <materialDesign:PackIcon Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Foreground="{TemplateBinding Foreground}"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}"
                                        Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                    </Trigger>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding>
                                                <MultiBinding.Converter>
                                                    <Converters:EqualityConverter/>
                                                </MultiBinding.Converter>
                                                <Binding Path="CommandParameter" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="CurrentLayout.LayoutType" />
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <Rectangle Width="3" Fill="Gray" Margin="3,0"/>
                        <Button Command="{Binding ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.Home}" 
                            Tools:AP.IconKind="Home" Height="30" ToolTip="Home Layout"/>
                        <Button Command="{Binding ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.List}" 
                            Tools:AP.IconKind="ViewHeadline" Height="40" ToolTip="List Layout"/>
                        <Button Command="{Binding ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.Card}" 
                            Tools:AP.IconKind="ViewCompact" Height="40" RenderTransformOrigin="0.5 0.5" ToolTip="Card Layout">
                            <Button.RenderTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </Button.RenderTransform>
                        </Button>
                        <Button Command="{Binding ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.Tile}" 
                            Tools:AP.IconKind="ViewModule" Height="43" ToolTip="Tile Layout"/>
                        <Rectangle Width="3" Fill="Gray" Margin="3,0"
                                   Visibility="{Binding CodexInfoVM.ShowCodexInfo, Converter={StaticResource ToVisibilityConverter}, ConverterParameter=True}"/>
                        <ToggleButton ToolTip="Show Book Info" IsChecked="{Binding CodexInfoVM.ShowCodexInfo, Mode=TwoWay}" Cursor="Hand"
                                      Visibility="{Binding CodexInfoVM.ShowCodexInfo, Converter={StaticResource ToVisibilityConverter}, ConverterParameter=True}">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <materialDesign:PackIcon Height="30" Width="30" Kind="BookInformationVariant"/>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                    </StackPanel>
                </Border>
                <!--#endregion-->

                <ContentControl Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="5" Content="{Binding CurrentLayout}"
                                 Visibility="{Binding CollectionVM.CurrentCollection.AllCodices.Count, 
                                                Converter={StaticResource ToVisibilityConverter}, ConverterParameter=False}"/>
                <Border Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="4" BorderBrush="Gray" BorderThickness="2" CornerRadius="3" Margin="20"
                        Visibility="{Binding CollectionVM.CurrentCollection.AllCodices.Count, 
                                                Converter={StaticResource ToVisibilityConverter}, ConverterParameter=True}">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="TextAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock>
                            Thank you for downloading COMPASS! <LineBreak/>
                            <LineBreak/>
                            The 
                            <Run Foreground="{StaticResource AccentColor}" Text="C"/>odex
                            <Run Foreground="{StaticResource AccentColor}" Text="O"/>rganizer to
                            <Run Foreground="{StaticResource AccentColor}" Text="M"/>ake
                            <Run Foreground="{StaticResource AccentColor}" Text="P"/>en&amp;paper
                            <Run Foreground="{StaticResource AccentColor}" Text="A"/>dventuring
                            <Run Foreground="{StaticResource AccentColor}" Text="S"/>uper
                            <Run Foreground="{StaticResource AccentColor}" Text="S"/>imple.
                            <LineBreak/><LineBreak/>
                            You can start building your digital library by selecting the 'Add Books' tab on the left.<LineBreak/>
                        </TextBlock>
                        <TextBlock TextAlignment="Center" Width="700">
                            COMPASS is a work in progress application that is made and maintained by a solo developer (Me).<LineBreak/>
                            This means that you might still occasionally run into problems or find some of its features lacking. <LineBreak/>
                            If this happens or if you have suggestions how to improve COMPASS, you can follow the links 
                            in "About" section of the settings to share your feedback and support the project.
                            
                        </TextBlock>
                    </StackPanel>
                </Border>
            </Grid>
            <!--#endregion-->
           
        </DockPanel>
    </Border>

</Window>
    
 
