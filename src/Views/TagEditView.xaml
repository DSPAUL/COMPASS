<UserControl x:Class="COMPASS.Views.TagEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:Converters="clr-namespace:COMPASS.Converters"
            xmlns:Tools="clr-namespace:COMPASS.Tools"
            xmlns:Models="clr-namespace:COMPASS.Models"
            xmlns:CustomControls ="clr-namespace:COMPASS.Resources.Controls"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:viewmodels="clr-namespace:COMPASS.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:TagEditViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="500">
    <Grid Name="MainGrid" Focusable="True" MouseDown="MainGrid_MouseDown">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <ControlTemplate x:Key="Btn" TargetType="Button">
                <Border Background="{TemplateBinding Background}" CornerRadius="5" Margin="3">
                    <ContentPresenter Margin="7,2" HorizontalAlignment="Center" TextBlock.Foreground="White"/>
                </Border>
            </ControlTemplate>
            <Style TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Template" Value="{StaticResource  Btn}"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Margin" Value="3,0"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Tools:TagTemplateSelector x:Key="TagDataTemplateSelector"/>
        </Grid.Resources>
        <Grid  x:Name="InfoGrid" Visibility="{Binding ShowInfoGrid, Converter={StaticResource ToVisibilityConverter}}" 
               Grid.Column ="0" Margin="10,0" Width="150">
            <Grid.RowDefinitions>
                <RowDefinition Height ="5"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" 10"/>
            </Grid.RowDefinitions>

            <Label Content="Name:" Grid.Row="1"/>
            <Border Margin="10,0" Grid.Row="2" Background="{StaticResource DarkUIElementBackground}" CornerRadius="2">
                <TextBox x:Name="TagNameTextBox" BorderBrush="{x:Null}" FontSize="14" Foreground="{StaticResource TextColor}"
                         Text="{Binding TempTag.Content, UpdateSourceTrigger=PropertyChanged}" Background="{x:Null}" Margin="2,0"
                         Loaded="TagNameTextBox_Loaded"/>
            </Border>
            <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="0,5"
                        Visibility="{Binding CreateNewTag, Converter={StaticResource ToVisibilityConverter}, ConverterParameter=True}">
                <Label Content="Group Tag:"/>
                <CheckBox x:Name="IsGroupCheckBox" HorizontalAlignment="Right" IsChecked="{Binding TempTag.IsGroup}"/>
            </StackPanel>
            <WrapPanel Grid.Row="4" Orientation="Horizontal"  Margin="0,5">
                <Label Content="Color:" VerticalAlignment="Center"/>
                <ToggleButton x:Name="ShowColorSelection" IsChecked="{Binding ShowColorSelection, Mode=TwoWay}" Margin="5,0" Cursor="Hand">
                    <ToggleButton.Background>
                        <SolidColorBrush Color="{Binding TempTag.SerializableBackgroundColor}"/>
                    </ToggleButton.Background>
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Border Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" 
                                    BorderBrush="{Binding TempTag.BackgroundColor, Converter={StaticResource ColorToBrushConverter}}" BorderThickness="2"
                                   MinWidth="60" MinHeight="15" CornerRadius="8" VerticalAlignment="Center">
                                <TextBlock Text="Same as Parent" TextWrapping="Wrap" FontSize="15" Margin="15,0"
                                           Visibility="{Binding TempTag.SerializableBackgroundColor, Converter={StaticResource ToVisibilityConverter}, ConverterParameter=True}" />
                            </Border>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </WrapPanel>
            <UniformGrid Grid.Row="5" Margin="5" Rows="1" Columns="2">
                <Button Command="{Binding OKCommand}" Visibility="Visible"
                        Tools:AP.IconKind="Check" Margin="5" Height="25" IsDefault="True">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconBtn}">
                            <Setter Property="Background" Value="{StaticResource AcceptFill}"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{StaticResource DisabledButton}"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Style="{StaticResource IconBtn}" Background="{StaticResource CancelFill}" Command="{Binding CancelCommand}"
                        Tools:AP.IconKind="WindowClose" Margin="5" Height="25"/>
            </UniformGrid>
        </Grid>
        <StackPanel x:Name="ColorSelection" Grid.Column="2" 
                    Visibility="{Binding ShowColorSelection, Converter= {StaticResource ToVisibilityConverter}}">
            <CustomControls:ColorPicker Height="135" Width="166" 
                                        SelectedColor="{Binding TempTag.SerializableBackgroundColor, Mode=TwoWay, TargetNullValue=Black}"/>
            <Button Style="{StaticResource IconTextButton}" Background="{StaticResource AcceptFill}" Margin="10,0"
                    Command="{Binding CloseColorSelectionCommand}" Content="Select Color" Tools:AP.IconKind="Check"/>
            <Button Style="{StaticResource TextButton}" Content="Same as Parent" BorderBrush="{StaticResource DarkUIElementBackground}" BorderThickness="2"
                    Command="{Binding ColorSameAsParentCommand}"/>
        </StackPanel>

    </Grid>
</UserControl>
