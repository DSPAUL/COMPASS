<UserControl x:Class="COMPASS.Views.LeftDockView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Tools ="clr-namespace:COMPASS.Tools"
             xmlns:Models="clr-namespace:COMPASS.Models" 
             xmlns:viewmodels="clr-namespace:COMPASS.ViewModels" 
             xmlns:Sources="clr-namespace:COMPASS.ViewModels.Sources" 
             xmlns:CustomControls="clr-namespace:COMPASS.Resources.Controls" 
             xmlns:views="clr-namespace:COMPASS.Views" 
             xmlns:Converters="clr-namespace:COMPASS.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             d:DataContext="{d:DesignInstance Type=viewmodels:LeftDockViewModel}"
             Background="{StaticResource ButtonBackground}"
             mc:Ignorable="d" FontSize="20"
             d:DesignHeight="650" d:DesignWidth="300">
    <UserControl.Resources>
        <Converters:ToVisibilityConverter x:Key="ToVisibilityConverter"/>
        <Tools:BindingProxy x:Key="CollapsedProxy" Data="{Binding}"/>
        <Style TargetType="Border" x:Key="RadioBtnContainer">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource UIElementBackground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="40"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=IsChecked}" Value="true">
                    <Setter Property="Background" Value="{StaticResource UIElementBackground}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="RadioBtnTextbox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Margin" Value="5,2"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Converters:RadioBtnToIntConverter x:Key="RadioBtnToIntConverter"/>
    </UserControl.Resources>

    <TabControl Background="{StaticResource TabFocus}" BorderThickness="0" TabStripPlacement="Left" Padding="0" 
                SelectedIndex="{Binding SelectedTab, Mode=TwoWay}">
        <TabControl.Resources>
            <Style TargetType="TabItem">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="TabBorder" CornerRadius="5,0,0,5">
                                <materialDesign:PackIcon Height="35" Width="35" HorizontalAlignment="Center"
                                         Margin="10" Kind="{TemplateBinding Tools:AP.IconKind}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="TabBorder" Property="Background" Value="{StaticResource TabFocus}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="TabBorder" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ContentControl" x:Key="TabContentWrapper">
                <Setter Property="Width" Value="250"/>
                <Setter Property="Visibility" Value="{Binding Data.Collapsed, Source={StaticResource CollapsedProxy}, Converter={StaticResource ToVisibilityConverter}, ConverterParameter=True}"/>
                <Setter Property="ItemsControl.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderBrush="{StaticResource Separator}" BorderThickness="3">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                                        <materialDesign:PackIcon Height="25" Width="25" HorizontalAlignment="Center"
                                             Margin="5"  Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}"/>
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.Header)}" FontSize="20"/>
                                    </StackPanel>
                                    <Rectangle Grid.Row="1" Grid.Column="1" Height="3" Fill="{StaticResource Separator}"/>
                                    <ContentPresenter Grid.Row="2" Grid.Column="1" Cursor="Arrow" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"/>
                                    <ToggleButton ToolTip="Collapse" IsChecked="{Binding Data.Collapsed, Source={StaticResource CollapsedProxy}}" 
                                                  Height="35" Width="35" HorizontalAlignment="Right">
                                        <ToggleButton.Template>
                                            <ControlTemplate>
                                                <materialDesign:PackIcon Height="25" Width="25" Margin="5"  Kind="ArrowCollapseLeft"/>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBlock" x:Key="Categorizer">
                <Setter Property="Foreground" Value="{StaticResource TextMutedColor}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>
                <Setter Property="FontSize" Value="20"/>
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource IconTextButton}" x:Key="HighlightedButton">
                <Setter Property="Padding" Value="7"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{StaticResource ButtonFocus}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </TabControl.Resources>
        <TabItem Visibility="Collapsed" />
        <TabItem Header="Tags" Tools:AP.IconKind="TagMultiple" ToolTip="Tags"
                 DataContext="{Binding MainVM.CollectionVM.TagsVM}" >
            <TabItem.Resources>
                <Tools:BindingProxy x:Key="Proxy" Data="{Binding}" />
                <ContextMenu x:Key="TagContextMenu">
                    <MenuItem Header="New Tag" Tools:AP.IconKind="TagPlusOutline" Command="{Binding Source={StaticResource Proxy}, Path=Data.CreateChildCommand}"/>
                    <MenuItem Header="Edit" Tools:AP.IconKind="Edit" Command="{Binding Source={StaticResource Proxy}, Path=Data.EditTagCommand}"/>
                    <MenuItem Header="Delete" Tools:AP.IconKind="Delete" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteTagCommand}"/>
                </ContextMenu>
                <HierarchicalDataTemplate x:Key="RegularTag" DataType="{x:Type Models:TreeViewNode}" ItemsSource="{Binding Children}">
                    <Button Cursor="Hand" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddTagFilterCommand}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiParamConverter}">
                                <Binding Path="Tag"/>
                                <Binding ElementName="IncludeRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                        <Button.Background>
                            <SolidColorBrush Color="{Binding Tag.BackgroundColor}"/>
                        </Button.Background>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="5" Margin="0,3" ContextMenu="{StaticResource TagContextMenu}" Background="{TemplateBinding Background}">
                                    <TextBlock Text="{Binding Tag.Content}" Margin="7,0" Foreground="White" FontSize="14"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </HierarchicalDataTemplate>
                <Tools:TagTemplateSelector x:Key="TagTemplateSelector"/>
            </TabItem.Resources>
            <ContentControl Tools:AP.Header="Tags" Tools:AP.IconKind="TagMultiple" Style="{StaticResource TabContentWrapper}">
                <Grid Grid.IsSharedSizeScope="True"> <!-- Grid instead of stackpannel so height is capped and scrolling works -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,5">
                        <StackPanel.Resources>
                            <Style TargetType="Border" x:Key="RadioBtnContainer">
                                <Setter Property="Opacity" Value="0.3"/>
                                <Setter Property="Padding" Value="10,0"/>
                                <Setter Property="Height" Value="30"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=IsChecked}" Value="true">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <RadioButton x:Name="IncludeRadioButton" GroupName="IncludeGroup" IsChecked="True">
                            <Border CornerRadius="5,0,0,5" Style="{StaticResource RadioBtnContainer}" Background="{StaticResource AcceptFill}">
                                <TextBlock Text="Include" Style="{StaticResource RadioBtnTextbox}"/>
                            </Border>
                        </RadioButton>
                        <RadioButton GroupName="IncludeGroup">
                            <Border CornerRadius="0,5,5,0" Style="{StaticResource RadioBtnContainer}" Background="IndianRed">
                                <TextBlock Text="Exclude" Style="{StaticResource RadioBtnTextbox}"/>
                            </Border>
                        </RadioButton>
                    </StackPanel>
                    
                    <CustomControls:ExpandingButton Grid.Row="1" Margin="30,10,30,5">
                        <CustomControls:ExpandingButton.Toggle>
                            <Button Tools:AP.IconKind="TagPlusOutline" Style="{StaticResource HighlightedButton}"
                                Content="New Tag" Command="{Binding AddTagCommand}" Margin="0"/>
                        </CustomControls:ExpandingButton.Toggle>
                        <CustomControls:ExpandingButton.HiddenContent>
                            <views:TagEditView DataContext="{Binding AddTagViewModel}"/>
                        </CustomControls:ExpandingButton.HiddenContent>
                    </CustomControls:ExpandingButton>
                    
                    <CustomControls:ExpandingButton Grid.Row="2" Margin="30,5,30,10">
                        <CustomControls:ExpandingButton.Toggle>
                            <Button Tools:AP.IconKind="FolderPlusOutline" Style="{StaticResource HighlightedButton}" 
                            Content="New Group" Command="{Binding AddGroupCommand}" Margin="0"/>
                        </CustomControls:ExpandingButton.Toggle>
                        <CustomControls:ExpandingButton.HiddenContent>
                            <views:TagEditView DataContext="{Binding AddGroupViewModel}"/>
                        </CustomControls:ExpandingButton.HiddenContent>
                    </CustomControls:ExpandingButton>
                    
                    <Rectangle Fill="{StaticResource Separator}" Height="3" Grid.Row="3"/>
                    <TreeView x:Name="TagTree" BorderBrush="{x:Null}" Background="{x:Null}"  Grid.Row="4"
                        ItemsSource="{Binding Path=TreeViewSource,Mode=TwoWay}"  Margin="5" Cursor="Arrow"
                        dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}"
                        ItemTemplateSelector="{StaticResource TagTemplateSelector}" MouseRightButtonDown="TagTree_MouseRightButtonDown">
                        <TreeView.Resources>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
                                <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
                                <Setter Property="ContextMenu" Value="{StaticResource TagContextMenu}"/>
                            </Style>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </ContentControl>
        </TabItem>
        <TabItem Header="Filter" Tools:AP.IconKind="Filter" DataContext="{Binding MainVM.CollectionVM.FilterVM}" ToolTip="Apply Filters">
            <ContentControl Tools:AP.Header="Filters" Tools:AP.IconKind="Filter" Style="{StaticResource TabContentWrapper}">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,5">
                            <StackPanel.Resources>
                                <Style TargetType="Border" x:Key="RadioBtnContainer">
                                    <Setter Property="Opacity" Value="0.3"/>
                                    <Setter Property="Padding" Value="10,0"/>
                                    <Setter Property="Height" Value="30"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=IsChecked}" Value="true">
                                            <Setter Property="Opacity" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Resources>
                            <RadioButton GroupName="IncludeFilterGroup" IsChecked="{Binding Include}">
                                <Border CornerRadius="5,0,0,5" Style="{StaticResource RadioBtnContainer}" Background="{StaticResource AcceptFill}">
                                    <TextBlock Text="Include" Style="{StaticResource RadioBtnTextbox}"/>
                                </Border>
                            </RadioButton>
                            <RadioButton GroupName="IncludeFilterGroup">
                                <Border CornerRadius="0,5,5,0" Style="{StaticResource RadioBtnContainer}" Background="IndianRed">
                                    <TextBlock Text="Exclude" Style="{StaticResource RadioBtnTextbox}"/>
                                </Border>
                            </RadioButton>
                        </StackPanel>
                        <Rectangle Grid.Row="1" Height="3" Fill="{StaticResource Separator}"/>
                        <StackPanel Grid.Row="2" Margin="20,15">
                            <StackPanel.Resources>
                                <Style x:Key="ContentLess" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                <Grid>
                                                    <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" 
                                                                 IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                                                  Focusable="false"  ClickMode="Press" Height="30">
                                                    </ToggleButton>
                                                    <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                                                AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                                        <Grid Name="DropDown" SnapsToDevicePixels="True"                
                                                                 MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                            <Border x:Name="DropDownBorder" Background="#FF3F3F3F" BorderThickness="1" BorderBrush="{StaticResource UIElementBackground}"/>
                                                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                            </ScrollViewer>
                                                        </Grid>
                                                    </Popup>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="false">
                                                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                                    </Trigger>
                                                    <Trigger Property="IsGrouping" Value="true">
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock Text="Author:"/>
                            <Grid>
                                <TextBlock Text="-- Select Author --" HorizontalAlignment="Center" Margin="0,0,20,0"/>
                                <ComboBox ItemsSource="{Binding AuthorList}" FontSize="15"
                                      SelectedValue="{Binding SelectedAuthor, UpdateSourceTrigger=LostFocus}" Style="{StaticResource ContentLess}"/>
                            </Grid>

                            <TextBlock Text="Publisher:" Margin="0,10,0,0"/>
                            <Grid>
                                <TextBlock Text="-- Select Publisher --" HorizontalAlignment="Center" Margin="0,0,20,0"/>
                                <ComboBox ItemsSource="{Binding PublisherList}" FontSize="15"
                                      SelectedValue="{Binding SelectedPublisher, UpdateSourceTrigger=LostFocus}" Style="{StaticResource ContentLess}"/>
                            </Grid>

                            <TextBlock Text="Has Property:" Margin="0,10,0,0"/>

                            <ItemsControl ItemTemplate="{StaticResource FilterTagTemplate}" ItemsSource="{Binding BooleanFilters}" 
                                          HorizontalContentAlignment="Left" HorizontalAlignment="Left" Margin="5" 
                                    dd:DragDrop.IsDragSource="True" dd:DragDrop.DropHandler="{Binding}"/>

                            <TextBlock Text="Release Date:" Margin="0,10,0,5"/>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="From:" Margin="5" VerticalAlignment="Top"/>
                                <DatePicker Grid.Column="1" Grid.Row="0" SelectedDate="{Binding StartReleaseDate}" FontSize="18"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Until: " Margin="5" VerticalAlignment="Top"/>
                                <DatePicker Grid.Column="2" Grid.Row="1" SelectedDate="{Binding StopReleaseDate}" FontSize="18"/>
                            </Grid>

                            <TextBlock Text="Minimum Rating:" Margin="0,10,0,0"/>
                            <materialDesign:RatingBar Value="{Binding MinRating, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                          IsPreviewValueEnabled="True" Margin="5 3"/>
                            <TextBlock Text="File Type:" Margin="0,5"/>
                            <Grid>
                                <TextBlock Text="-- Select File Type --" HorizontalAlignment="Center" Margin="0,0,20,0"/>
                                <ComboBox ItemsSource="{Binding FileTypeList}" FontSize="15"
                                      SelectedValue="{Binding SelectedFileType, UpdateSourceTrigger=LostFocus}" Style="{StaticResource ContentLess}"/>
                            </Grid>
                        </StackPanel>
                        <Button Content="Clear All" Grid.Row="4" Margin="10" Command="{Binding ClearFiltersCommand}"
                            Style="{StaticResource IconTextButton}" Tools:AP.IconKind="FilterRemove" Background="Red"/>
                    </Grid>
                </ScrollViewer>
            </ContentControl>
        </TabItem>
        <TabItem Header="Layouts" Tools:AP.IconKind="ViewDashboardEdit" ToolTip="Edit Layout">
            <ContentControl Tools:AP.Header="Layouts" Tools:AP.IconKind="ViewDashboardEdit" Style="{StaticResource TabContentWrapper}">
                <ContentControl.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource UIElementBackground}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Margin" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="5" Background="{TemplateBinding Background}"
                                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                        <StackPanel VerticalAlignment="Center">
                                            <materialDesign:PackIcon Foreground="{TemplateBinding Foreground}" Width="50" Height="50"
                                                    Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}" 
                                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" FontSize="20"
                                                           Foreground="{TemplateBinding Foreground}"/>
                                        </StackPanel>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <Converters:EqualityConverter/>
                                        </MultiBinding.Converter>
                                        <Binding Path="CommandParameter" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="MainVM.CurrentLayout.LayoutType" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </ContentControl.Resources>
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel>
                        <UniformGrid Rows="2" Columns="2" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" Margin="5">
                            <Button Command="{Binding MainVM.ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.Home}" 
                            Tools:AP.IconKind="Home" ToolTip="Home Layout" Content="Home"/>
                            <Button Command="{Binding MainVM.ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.List}" 
                            Tools:AP.IconKind="ViewHeadline" ToolTip="List Layout" Content="List"/>
                            <Button Command="{Binding MainVM.ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.Card}" 
                            Tools:AP.IconKind="FormatListText" ToolTip="Card Layout" Content="Card"/>
                            <Button Command="{Binding MainVM.ChangeLayoutCommand}" CommandParameter="{x:Static viewmodels:LayoutViewModel+Layout.Tile}" 
                            Tools:AP.IconKind="ViewGrid" ToolTip="Tile Layout" Content="Grid"/>
                        </UniformGrid>
                        <Rectangle Height="3" Fill="{StaticResource Separator}"/>
                        <TextBlock Style="{StaticResource Categorizer}" Text="Customize"/>
                        <ContentControl DataContext="{Binding MainVM.CurrentLayout}"  Content="{Binding}" Margin="10">
                            <ContentControl.Resources>
                                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                                    <Setter Property="Margin" Value="5"/>
                                </Style>
                                <DataTemplate DataType="{x:Type viewmodels:ListLayoutViewModel}">
                                    <StackPanel>
                                        <CheckBox Content="Show Author" IsChecked="{Binding ShowAuthor}"/>
                                        <CheckBox Content="Show Publisher" IsChecked="{Binding ShowPublisher}"/>
                                        <CheckBox Content="Show Rating" IsChecked="{Binding ShowRating}"/>
                                        <CheckBox Content="Show Release Date" IsChecked="{Binding ShowReleaseDate}"/>
                                        <CheckBox Content="Show Tags" IsChecked="{Binding ShowTags}"/>
                                        <CheckBox Content="Show Version" IsChecked="{Binding ShowVersion}"/>
                                        <CheckBox Content="Show File Icons" IsChecked="{Binding ShowFileIcons}"/>
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type viewmodels:CardLayoutViewModel}">
                                    <StackPanel>
                                        <CheckBox Content="Show Authors" IsChecked="{Binding ShowAuthor}"/>
                                        <CheckBox Content="Show Publisher" IsChecked="{Binding ShowPublisher}"/>
                                        <CheckBox Content="Show Rating" IsChecked="{Binding ShowRating}"/>
                                        <CheckBox Content="Show Release Date" IsChecked="{Binding ShowReleaseDate}"/>
                                        <CheckBox Content="Show Tags" IsChecked="{Binding ShowTags}"/>
                                        <CheckBox Content="Show Version" IsChecked="{Binding ShowVersion}"/>
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type viewmodels:TileLayoutViewModel}">
                                    <StackPanel Margin="10">
                                        <StackPanel.Resources>
                                            <ObjectDataProvider x:Key="DataOptionsFromEnum"
                                                    MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                                                <ObjectDataProvider.MethodParameters>
                                                    <x:Type TypeName="viewmodels:TileLayoutViewModel+DataOption"/>
                                                </ObjectDataProvider.MethodParameters>
                                            </ObjectDataProvider>
                                        </StackPanel.Resources>
                                        <TextBlock Text="Cover Size" Margin="5"/>
                                        <Slider Value="{Binding TileWidth}" Minimum="50" Interval="5" Maximum="400" Margin="5"/>
                                        <CheckBox x:Name="ShowExtraDataCheckbox" Content="Show Extra Data" IsChecked="{Binding ShowExtraData}"/>
                                        <ComboBox Visibility="{Binding ElementName=ShowExtraDataCheckbox, Path=IsChecked, Converter={StaticResource ToVisibilityConverter}}"
                                                  ItemsSource="{Binding Source={StaticResource DataOptionsFromEnum}}" SelectedItem="{Binding DisplayedData, Mode=TwoWay}"/>
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type viewmodels:HomeLayoutViewModel}">
                                    <StackPanel Margin="10">
                                        <CheckBox Content="Show Title" IsChecked="{Binding ShowTitle}"/>
                                        <TextBlock Text="Cover Size" Margin="5"/>
                                        <Slider Value="{Binding TileWidth}" Minimum="50" Interval="5" Maximum="400" Margin="5"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </StackPanel>
                </ScrollViewer>
            </ContentControl>
        </TabItem>
        <TabItem Header="Sorting" Tools:AP.IconKind="Sort" ToolTip="Sorting">
            <UserControl Style="{StaticResource TabContentWrapper}" Tools:AP.Header="Sorting" Tools:AP.IconKind="Sort" 
                         DataContext="{Binding MainVM.CollectionVM.FilterVM}">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10">
                            <RadioButton GroupName="SortDirection"
                                     IsChecked="{Binding SortDirection, ConverterParameter=0, Converter={StaticResource RadioBtnToIntConverter}}">
                                <Border CornerRadius="5,0,0,5" Style="{StaticResource RadioBtnContainer}">
                                    <TextBlock Text="Ascending" Style="{StaticResource RadioBtnTextbox}"/>
                                </Border>
                            </RadioButton>
                            <RadioButton GroupName="SortDirection"
                                     IsChecked="{Binding SortDirection, ConverterParameter=1, Converter={StaticResource RadioBtnToIntConverter}}">
                                <Border CornerRadius="0,5,5,0" Margin="-1,0,0,0" Style="{StaticResource RadioBtnContainer}">
                                    <TextBlock Text="Descending" Style="{StaticResource RadioBtnTextbox}"/>
                                </Border>
                            </RadioButton>
                        </StackPanel>
                        <Rectangle Height="3" Fill="{StaticResource Separator}"/>
                        <ListBox ItemsSource="{Binding SortOptions}" SelectedValue="{Binding SortProperty}"
                             Background="{x:Null}" BorderThickness="0" Margin="10" SelectedValuePath="Value">
                            <!--<ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="2"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>-->
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border Padding="5,3" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                                    <TextBlock Text="{Binding Key}" HorizontalAlignment="Stretch"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" Value="{StaticResource TextMutedColor}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{StaticResource AccentColorMuted}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </StackPanel>
                </ScrollViewer>
            </UserControl>
        </TabItem>
        <TabItem Header="AddBooks" Tools:AP.IconKind="BookAdd" ToolTip="Add Books" Grid.IsSharedSizeScope="True">
            <ContentControl Tools:AP.Header="Add Books" Tools:AP.IconKind="BookAdd" Style="{StaticResource TabContentWrapper}">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource ContentButton}" x:Key="HighlightedContentButton">
                                <Setter Property="Padding" Value="7"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="{StaticResource ButtonFocus}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        
                        <TextBlock Text="Physical Books" Style="{StaticResource Categorizer}"/>
                        <Button Tools:AP.IconKind="BookPlusOutline" Style="{StaticResource HighlightedButton}" Content="Add Manually"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.Manual}"/>
                        <Button Tools:AP.IconKind="Barcode" Style="{StaticResource HighlightedButton}" Content="From ISBN"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.ISBN}"/>

                        <TextBlock Text="Add Local Files" Style="{StaticResource Categorizer}"/>
                        <Button Tools:AP.IconKind="FilePlusOutline" Style="{StaticResource HighlightedButton}" Content="Import File(s)"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.File}"/>
                        <Button Tools:AP.IconKind="FolderPlusOutline" Style="{StaticResource HighlightedButton}" Content="Import Folder"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.Folder}"/>


                        <TextBlock Text="Add Online Files" Style="{StaticResource Categorizer}"/>
                        <Button Tools:AP.IconKind="GoogleDrive" Style="{StaticResource HighlightedButton}" Content="Google Drive"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.GoogleDrive}"/>
                        <!-- Dropbox not done yet, needs API key-->
                        <!--<Button Tools:AP.IconKind="Dropbox" Style="{StaticResource HighlightedButton}" Content="Dropbox"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.Dropbox}"/>-->
                        <Button Style="{StaticResource HighlightedContentButton}" Margin="20,5"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.Homebrewery}">
                            <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Background}" 
                                BorderThickness="0" CornerRadius="7" HorizontalAlignment="Stretch" Padding="7,2">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Content="{StaticResource HomebreweryLogo}"/>
                                    <TextBlock Text="Homebrewery"/>
                                </StackPanel>
                            </Border>
                        </Button>
                        <!--DND Beyond doesn't work yet, blocks scrapers, no public api-->
                        <!--<Button Style="{StaticResource HighlightedContentButton}"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.DnDBeyond}">
                            <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Background}" 
                                BorderThickness="0" CornerRadius="7" HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Content="{StaticResource DnDBeyondLogo}"/>
                                    <TextBlock Text="DnD Beyond"/>
                                </StackPanel>
                            </Border>
                        </Button>-->
                        <Button Style="{StaticResource HighlightedContentButton}" Margin="20,5"
                                Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.GmBinder}">
                            <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Background}" 
                                    BorderThickness="0" CornerRadius="7" HorizontalAlignment="Stretch" Padding="30,2">
                                <ContentControl Content="{StaticResource GMBinderLogo}" HorizontalContentAlignment="Center"/>
                            </Border>
                        </Button>
                        <Button Tools:AP.IconKind="Web" Style="{StaticResource HighlightedButton}" Content="Other"
                            Command="{Binding ImportCommand}" CommandParameter="{x:Static Sources:ImportSource.GenericURL}"/>
                    </StackPanel>
                </ScrollViewer>
            </ContentControl>
        </TabItem>
        <TabItem x:Name="Logs" Header="Logs" Tools:AP.IconKind="TextLong" ToolTip="Activity Log" GotFocus="Logs_GotFocus">
            <TabItem.Template>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="TabBorder" CornerRadius="5,0,0,5">
                        <Grid>
                            <materialDesign:PackIcon Height="35" Width="35" HorizontalAlignment="Center"
                                         Margin="10" Kind="TextLong"/>
                            <Ellipse x:Name="WarningNotification" Fill="Orange" Width="10" Height="10" Visibility="Collapsed" 
                                     VerticalAlignment="Top" HorizontalAlignment="Right" Margin="5"/>
                            <Ellipse x:Name="ErrorNotification" Fill="Red" Width="10" Height="10" Visibility="Collapsed"
                                     VerticalAlignment="Top" HorizontalAlignment="Right" Margin="5"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TabBorder" Property="Background" Value="{StaticResource TabFocus}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="TabBorder" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </TabItem.Template>
            <ContentControl Tools:AP.Header="Activity Log" Tools:AP.IconKind="TextLong" Style="{StaticResource TabContentWrapper}">
                <ContentControl.Resources>
                    <Converters:MsgTypetoColorConverter x:Key="MsgTypetoColorConverter"/>
                </ContentControl.Resources>
                <ScrollViewer x:Name="Scroller" VerticalScrollBarVisibility="Auto" Background="{StaticResource LogBackground}">
                    <ItemsControl x:Name="LogsControl" BorderThickness="0" ItemsSource="{x:Static Tools:Logger.ActivityLog}" Margin="10,5">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Msg, FallbackValue=Message}" FontSize="12" TextWrapping="Wrap" Margin="0,3"
                                               Foreground="{Binding Type, Mode=OneWay,Converter={StaticResource MsgTypetoColorConverter}}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </ContentControl>
        </TabItem>
    </TabControl>
</UserControl>
