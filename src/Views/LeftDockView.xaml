<UserControl x:Class="COMPASS.Views.LeftDockView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:props="clr-namespace:COMPASS.Properties"
             xmlns:Tools ="clr-namespace:COMPASS.Tools"
             xmlns:Models="clr-namespace:COMPASS.Models" 
             xmlns:viewmodels="clr-namespace:COMPASS.ViewModels" 
             xmlns:CustomControls="clr-namespace:COMPASS.Resources.Controls" 
             xmlns:views="clr-namespace:COMPASS.Views" xmlns:Converters="clr-namespace:COMPASS.Tools.Converters"
             d:DataContext="{d:DesignInstance Type=viewmodels:LeftDockViewModel}"
             Background="{StaticResource ButtonBackground}"
             mc:Ignorable="d" FontSize="20"
             d:DesignHeight="650" d:DesignWidth="300">

    <TabControl Background="{StaticResource TabFocus}" BorderThickness="0" TabStripPlacement="Left" Padding="0" SelectedIndex="{Binding selectedTab}">
        <TabControl.Resources>
            <Style TargetType="TabItem">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="TabBorder" CornerRadius="5,0,0,5">
                                <materialDesign:PackIcon Height="35" Width="35" HorizontalAlignment="Center"
                                         Margin="10" Kind="{TemplateBinding Tools:AP.IconKind}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="TabBorder" Property="Background" Value="{StaticResource TabFocus}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="TabBorder" Property="Background" Value="{StaticResource SelectableTransparent}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ContentControl" x:Key="TabContentWrapper">
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="ItemsControl.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderBrush="{StaticResource Separator}" BorderThickness="3">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                                        <materialDesign:PackIcon Height="25" Width="25" HorizontalAlignment="Center"
                                             Margin="5"  Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}"/>
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.Header)}" FontSize="20"/>
                                    </StackPanel>
                                    <Rectangle Grid.Row="1" Grid.Column="1" Height="3" Fill="{StaticResource Separator}"/>
                                    <ContentPresenter Grid.Row="2" Grid.Column="1" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"/>
                                    <materialDesign:PackIcon Height="25" Width="25" HorizontalAlignment="Right"
                                             Margin="5"  Kind="ArrowCollapseLeft"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBlock" x:Key="Categorizer">
                <Setter Property="Foreground" Value="{StaticResource TextMutedColor}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>
                <Setter Property="FontSize" Value="20"/>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="GrayBtn">
                <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{StaticResource ButtonFocus}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="outerIconBtn" BasedOn="{StaticResource GrayBtn}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="7" HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="35,0">
                                    <materialDesign:PackIcon Height="30" Margin="0,0,10,0"
                                                Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}"/>
                                    <ContentPresenter VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </TabControl.Resources>
        <TabItem Header="Tags" Tools:AP.IconKind="TagMultiple" DataContext="{Binding TagsTabVM}" ToolTip="Tags">
            <TabItem.Resources>
                <Tools:BindingProxy x:Key="Proxy" Data="{Binding}" />
                <ContextMenu x:Key="TagContextMenu">
                    <MenuItem Header="Edit" Tools:AP.IconKind="Edit" Command="{Binding Source={StaticResource Proxy}, Path=Data.EditTagCommand}"/>
                    <MenuItem Header="Delete" Tools:AP.IconKind="Delete" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteTagCommand}"/>
                </ContextMenu>
                <HierarchicalDataTemplate x:Key="RegularTag" DataType="{x:Type Models:TreeViewNode}" ItemsSource="{Binding Children}">
                    <Button Cursor="Hand"  Command="{Binding Source={StaticResource Proxy}, Path=Data.MVM.CollectionVM.AddTagFilterCommand}" CommandParameter="{Binding Tag}">
                        <Button.Background>
                            <SolidColorBrush Color="{Binding Tag.BackgroundColor}"/>
                        </Button.Background>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="5" Margin="0,3" ContextMenu="{StaticResource TagContextMenu}" Background="{TemplateBinding Background}">
                                    <TextBlock Text="{Binding Tag.Content}" Margin="7,0" Foreground="White" FontSize="14"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate x:Key="GroupTag" DataType="{x:Type Models:TreeViewNode}" ItemsSource="{Binding Children}">
                    <Border CornerRadius="5" Margin="0,3" Background="{x:Null}" ContextMenu="{StaticResource TagContextMenu}">
                        <TextBlock Text="{Binding Tag.Content}" Margin="7,0" Foreground="LightGray" 
                                       FontSize="16" FontWeight="Bold" Typography.Capitals="AllSmallCaps"/>
                    </Border>
                </HierarchicalDataTemplate>
                <Tools:TagTemplateSelector x:Key="TagTemplateSelector"/>
            </TabItem.Resources>
            <ContentControl Tools:AP.Header="Tags" Tools:AP.IconKind="TagMultiple" Style="{StaticResource TabContentWrapper}">
                <Grid Grid.Row="2" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <CustomControls:ExpandingButton Grid.Row="0" Margin="10,10,10,5">
                        <CustomControls:ExpandingButton.Toggle>
                            <Button Tools:AP.IconKind="TagPlusOutline" Style="{StaticResource outerIconBtn}" 
                            Content="New Tag" Command="{Binding AddTagCommand}" HorizontalAlignment="Stretch" />
                        </CustomControls:ExpandingButton.Toggle>
                        <CustomControls:ExpandingButton.HiddenContent>
                            <views:TagEditView DataContext="{Binding AddTagViewModel}"/>
                        </CustomControls:ExpandingButton.HiddenContent>
                    </CustomControls:ExpandingButton>
                    <CustomControls:ExpandingButton Grid.Row="1" Margin="10,5">
                        <CustomControls:ExpandingButton.Toggle>
                            <Button Tools:AP.IconKind="FolderPlusOutline" Style="{StaticResource outerIconBtn}" 
                            Content="New Group" Command="{Binding AddGroupCommand}"  HorizontalAlignment="Stretch" />
                        </CustomControls:ExpandingButton.Toggle>
                        <CustomControls:ExpandingButton.HiddenContent>
                            <views:TagEditView DataContext="{Binding AddTagViewModel}"/>
                        </CustomControls:ExpandingButton.HiddenContent>
                    </CustomControls:ExpandingButton>
                    <TreeView x:Name="TagTree" BorderBrush="{x:Null}" Background="{x:Null}"  Grid.Row="2"
                        ItemsSource="{Binding Path=TreeViewSource,Mode=TwoWay}"  Margin="5"
                        dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}"
                        ItemTemplateSelector="{StaticResource TagTemplateSelector}" MouseRightButtonDown="TagTree_MouseRightButtonDown">
                        <TreeView.Resources>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
                                <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
                            </Style>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </ContentControl>
        </TabItem>
        <TabItem Header="Filter" Tools:AP.IconKind="Filter" DataContext="{Binding FiltersTabVM}" ToolTip="Apply Filters">
            <ContentControl Tools:AP.Header="Filters" Tools:AP.IconKind="Filter" Style="{StaticResource TabContentWrapper}">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" Grid.Row="2" Grid.Column="1">
                    <Grid Margin="0 0 -10 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Margin="20,15">
                            <TextBlock Text="Author:"/>
                            <ComboBox ItemsSource="{Binding MVM.CurrentCollection.AuthorList}" FontSize="15"
                                      SelectedValue="{Binding SelectedAuthor}"/>

                            <TextBlock Text="Publisher:" Margin="0,10,0,0"/>
                            <ComboBox ItemsSource="{Binding MVM.CurrentCollection.PublisherList}" FontSize="15"
                                      SelectedValue="{Binding SelectedPublisher}"/>

                            <TextBlock Text="Released Between:" Margin="0,10,0,0"/>
                            <DatePicker SelectedDate="{Binding StartReleaseDate}" HorizontalAlignment="Left" Margin="-5 0" FontSize="18"/>
                            <TextBlock Text="And"/>
                            <DatePicker SelectedDate="{Binding StopReleaseDate}"  HorizontalAlignment="Left" Margin="-5 0" FontSize="18"/>

                            <TextBlock Text="Minimum Rating:" Margin="0,10,0,0"/>
                            <materialDesign:RatingBar Value="{Binding MinRating, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                                          IsPreviewValueEnabled="True" Margin="-2 3"/>

                            <TextBlock Text="Sources:" Margin="0,0,10,0"/>

                            <ItemsControl ItemTemplate="{StaticResource FilterTagTemplate}" ItemsSource="{Binding MVM.CollectionVM.SourceFilters}" 
                                          HorizontalContentAlignment="Left" HorizontalAlignment="Left" Margin="5" 
                                    dd:DragDrop.IsDragSource="True" dd:DragDrop.DropHandler="{Binding MVM.CollectionVM}"/>
                        </StackPanel>
                        <Button Content="Clear All" Grid.Row="2" Margin="10" Command="{Binding ClearFiltersCommand}"
                            Style="{StaticResource IconTextButton}" Tools:AP.IconKind="FilterRemove" Background="Red"/>
                    </Grid>
                </ScrollViewer>
            </ContentControl>
        </TabItem>
        <TabItem Header="Layouts" Tools:AP.IconKind="ViewDashboardEdit" ToolTip="Edit Layout">
            <ContentControl Tools:AP.Header="Layouts" Tools:AP.IconKind="ViewDashboardEdit" Style="{StaticResource TabContentWrapper}">
                <ContentControl.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource UIElementBackground}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Margin" Value="10"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="5" Background="{TemplateBinding Background}"
                                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                        <StackPanel VerticalAlignment="Center">
                                            <materialDesign:PackIcon Foreground="{TemplateBinding Foreground}" Width="50" Height="50"
                                                    Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}" 
                                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" FontSize="20"
                                                           Foreground="{TemplateBinding Foreground}"/>
                                        </StackPanel>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <Converters:EqualityConverter/>
                                        </MultiBinding.Converter>
                                        <Binding Path="CommandParameter" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="MVM.CurrentLayout.LayoutType" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </ContentControl.Resources>
                <StackPanel>
                    <UniformGrid Rows="2" Columns="2" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" Margin="5">
                        <Button Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+CodexLayout.HomeLayout}" 
                            Tools:AP.IconKind="Home" ToolTip="Home Layout" Content="Home"/>
                        <Button Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+CodexLayout.ListLayout}" 
                            Tools:AP.IconKind="ViewHeadline" ToolTip="List Layout" Content="List"/>
                        <Button Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+CodexLayout.CardLayout}" 
                            Tools:AP.IconKind="FormatListText" ToolTip="Card Layout" Content="Card"/>
                        <Button Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+CodexLayout.TileLayout}" 
                            Tools:AP.IconKind="ViewGrid" ToolTip="Tile Layout" Content="Grid"/>
                    </UniformGrid>
                    <Rectangle Height="3" Fill="{StaticResource Separator}"/>
                    <TextBlock Style="{StaticResource Categorizer}" Text="Customize"/>
                    <ContentControl DataContext="{Binding MVM.CurrentLayout}"  Content="{Binding}" Margin="10">
                        <ContentControl.Resources>
                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                            <DataTemplate DataType="{x:Type viewmodels:ListLayoutViewModel}">
                                <StackPanel>
                                    <CheckBox Content="Show Author" IsChecked="{Binding ShowAuthor}"/>
                                    <CheckBox Content="Show Publisher" IsChecked="{Binding ShowPublisher}"/>
                                    <CheckBox Content="Show Rating" IsChecked="{Binding ShowRating}"/>
                                    <CheckBox Content="Show Release Date" IsChecked="{Binding ShowReleaseDate}"/>
                                    <CheckBox Content="Show Tags" IsChecked="{Binding ShowTags}"/>
                                    <CheckBox Content="Show Version" IsChecked="{Binding ShowVersion}"/>
                                    <CheckBox Content="Show File Icons" IsChecked="{Binding ShowFileIcons}"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewmodels:CardLayoutViewModel}">
                                <StackPanel>
                                    <CheckBox Content="Show Authors" IsChecked="{Binding ShowAuthor}"/>
                                    <CheckBox Content="Show Publisher" IsChecked="{Binding ShowPublisher}"/>
                                    <CheckBox Content="Show Rating" IsChecked="{Binding ShowRating}"/>
                                    <CheckBox Content="Show Release Date" IsChecked="{Binding ShowReleaseDate}"/>
                                    <CheckBox Content="Show Tags" IsChecked="{Binding ShowTags}"/>
                                    <CheckBox Content="Show Version" IsChecked="{Binding ShowVersion}"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewmodels:TileLayoutViewModel}">
                                <StackPanel Margin="10">
                                    <CheckBox Content="Show Title" IsChecked="{Binding ShowTitle}"/>
                                    <TextBlock Text="Cover Size" Margin="5"/>
                                    <Slider Value="{Binding TileWidth}" Minimum="50" Interval="5" Maximum="400" Margin="5"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewmodels:HomeLayoutViewModel}">
                                <StackPanel Margin="10">
                                    <CheckBox Content="Show Title" IsChecked="{Binding ShowTitle}"/>
                                    <TextBlock Text="Cover Size" Margin="5"/>
                                    <Slider Value="{Binding TileWidth}" Minimum="50" Interval="5" Maximum="400" Margin="5"/>
                                </StackPanel>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </StackPanel>
            </ContentControl>
        </TabItem>
        <TabItem Header="Sorting" Tools:AP.IconKind="Sort" ToolTip="Sorting">
            <UserControl Style="{StaticResource TabContentWrapper}" Tools:AP.Header="Sorting" Tools:AP.IconKind="Sort" DataContext="{Binding MVM.CollectionVM}">
                <UserControl.Resources>
                    <Style TargetType="Border" x:Key="RadioBtnContainer">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="{StaticResource UIElementBackground}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Height" Value="40"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=RadioButton}, Path=IsChecked}" Value="true">
                                <Setter Property="Background" Value="{StaticResource UIElementBackground}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBlock" x:Key="RadioBtnTextbox">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                        <Setter Property="Margin" Value="5,2"/>
                        <Setter Property="FontSize" Value="18"/>
                    </Style>
                    <Style TargetType="RadioButton">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RadioButton">
                                    <ContentPresenter Content="{TemplateBinding Content}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Converters:RadioBtnToIntConverter x:Key="RadioBtnToIntConverter"/>
                </UserControl.Resources>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10">
                        <RadioButton GroupName="SortDirection"
                                     IsChecked="{Binding SortDirection, ConverterParameter=0, Converter={StaticResource RadioBtnToIntConverter}}">
                            <Border CornerRadius="5,0,0,5" Style="{StaticResource RadioBtnContainer}">
                                <TextBlock Text="Ascending" Style="{StaticResource RadioBtnTextbox}"/>
                            </Border>
                        </RadioButton>
                        <RadioButton GroupName="SortDirection"
                                     IsChecked="{Binding SortDirection, ConverterParameter=1, Converter={StaticResource RadioBtnToIntConverter}}">
                            <Border CornerRadius="0,5,5,0" Margin="-1,0,0,0" Style="{StaticResource RadioBtnContainer}">
                                <TextBlock Text="Descending" Style="{StaticResource RadioBtnTextbox}"/>
                            </Border>
                        </RadioButton>
                    </StackPanel>
                    <Rectangle Height="3" Fill="{StaticResource Separator}"/>
                    <ListBox ItemsSource="{Binding SortOptions}" DisplayMemberPath="Key" SelectedValuePath="Value" SelectedValue="{Binding SortProperty}"
                             Background="{x:Null}" BorderThickness="0" Margin="10">
                        <!--<ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="2"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>-->
                    </ListBox>
                </StackPanel>
            </UserControl>
        </TabItem>
        <TabItem Header="AddBook" Tools:AP.IconKind="BookAdd" ToolTip="Add Books">
            <TabItem.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource IconTextButton}" x:Key="ImportButton">
                    <Setter Property="Padding" Value="30,7"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonFocus}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TabItem.Resources>
            <ContentControl Tools:AP.Header="Add Books" Tools:AP.IconKind="BookAdd" Style="{StaticResource TabContentWrapper}">
                <StackPanel>

                    <TextBlock Text="Physical Books" Style="{StaticResource Categorizer}"/>
                    <Button Tools:AP.IconKind="BookPlusOutline" Style="{StaticResource ImportButton}" Content="Add Manually"
                            Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.Manual}"/>
                    <Button Tools:AP.IconKind="Barcode" Style="{StaticResource ImportButton}" Content="From ISBN"
                            Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.ISBN}"/>

                    <TextBlock Text="Add Local Files" Style="{StaticResource Categorizer}"/>
                    <Button Tools:AP.IconKind="FilePlusOutline" Style="{StaticResource ImportButton}" Content="Import File(s)"
                            Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.File}"/>
                    <Button Tools:AP.IconKind="FolderPlusOutline" Style="{StaticResource ImportButton}" Content="Import Folder"
                            Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.Folder}"/>


                    <TextBlock Text="Add Online Files" Style="{StaticResource Categorizer}"/>
                    <Button Tools:AP.IconKind="GoogleDrive" Style="{StaticResource ImportButton}" Content="Google Drive"
                            Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.GoogleDrive}"/>
                    <Button Style="{StaticResource GrayBtn}" Margin="20,5"
                            Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.Homebrewery}">
                        <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Background}" 
                                BorderThickness="0" CornerRadius="7" HorizontalAlignment="Stretch" Padding="7,2">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Content="{StaticResource HomebreweryLogo}"/>
                                <TextBlock Text="Homebrewery"/>
                            </StackPanel>
                        </Border>
                    </Button>
                    <!--DND Beyond doesn't work yet-->
                    <Button Style="{StaticResource GrayBtn}" Visibility="Collapsed"
                            Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.DnDBeyond}">
                        <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Background}" 
                                BorderThickness="0" CornerRadius="7" HorizontalAlignment="Stretch">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Content="{StaticResource DnDBeyondLogo}"/>
                                <TextBlock Text="DnD Beyond"/>
                            </StackPanel>
                        </Border>
                    </Button>
                    <Button Style="{StaticResource GrayBtn}" Margin="20,5"
                                Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+Sources.GmBinder}">
                        <Border Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Background}" 
                                    BorderThickness="0" CornerRadius="7" HorizontalAlignment="Stretch" Padding="8,2">
                            <ContentControl Content="{StaticResource GMBinderLogo}"/>
                        </Border>
                    </Button>
                </StackPanel>
            </ContentControl>
        </TabItem>
    </TabControl>
</UserControl>
