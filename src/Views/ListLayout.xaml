<UserControl x:Class="COMPASS.Views.ListLayout"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Controls="clr-namespace:COMPASS.Resources.Controls"
             xmlns:Tools ="clr-namespace:COMPASS.Tools"
             xmlns:Converters="clr-namespace:COMPASS.Tools.Converters" 
             xmlns:viewmodels="clr-namespace:COMPASS.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:ListLayoutViewModel}"
             mc:Ignorable="d"  x:Name="LastLayoutControl"
             d:DesignHeight="450" d:DesignWidth="800">

    <Controls:EnhancedDataGrid x:Name="ListLayoutGrid" MaxWidth="{Binding ActualWidth, ElementName=LastLayoutControl}"
                Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{StaticResource TextColor}" Margin="10,0"
                AutoGenerateColumns="False" ItemsSource="{Binding MVM.CollectionVM.ActiveFiles, IsAsync=True}"
                CanUserAddRows="False" SelectionMode="Extended" CanUserSortColumns="True"
                RowHeaderWidth="0" GridLinesVisibility="None" CanUserResizeColumns="True"
                SelectedItem="{Binding SelectedFile, Mode=TwoWay}" VerticalGridLinesBrush="#FF484848"
                ClipToBounds="True" VirtualizingPanel.IsVirtualizing ="True"
                VirtualizingStackPanel.VirtualizationMode = "Recycling" MaxHeight="4000"
                SelectionChanged="FileView_SelectionChanged" DataContextChanged="FileView_DataContextChanged" TargetUpdated="FileView_TargetUpdated" >
        <DataGrid.Resources>
            <Tools:BindingProxy x:Key="LayoutProxy" Data="{Binding}" />
            <Tools:BindingProxy x:Key="CodexProxy" Data="{Binding CodexVM}" />
            <Converters:MultiParamConverter x:Key="MultiParamConverter"/>
            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <DockPanel Margin="0,8">
                                <DockPanel.Background>
                                    <SolidColorBrush Color="Black" Opacity="0"/>
                                </DockPanel.Background>
                                <TextBlock Text="{TemplateBinding Content}" Margin="5,0" DockPanel.Dock="Left"
                                            Width="{TemplateBinding Width}" TextAlignment="Left" 
                                            FontSize="14" FontWeight="Bold" Foreground="#808080"/>
                                <Path x:Name="SortArrow" VerticalAlignment="Center" Width="8" Height="6" Margin="2,0,5,0" 
                                            Stretch="Fill" Opacity="0.5" Fill="White" RenderTransformOrigin="0.5,0.4" DockPanel.Dock="Left"
                                            Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" />
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                                        Width="2" BorderThickness="1" DockPanel.Dock="Right"
                                        BorderBrush="{Binding VerticalGridLinesBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                                        Cursor="SizeWE"/>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu IsEnabled="True" Placement="Bottom" ItemsSource="{Binding Source = {StaticResource LayoutProxy}, Path=Data.ViewOptions}"
                                     ItemContainerStyle="{StaticResource DropdownMenuItem}"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{x:Null}"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="default">
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="0,0,10,0"/>
            </Style>
            <!--ContextMenu needs to be in every view where it is used instead of in a resource dict because 
            in resource dict it "sticks" to first view and the binding target for SelectedItems doesn't update when the view changes
            https://github.com/dotnet/wpf/issues/4128-->
            <ContextMenu x:Key="MultiCodexContextMenu" 
                     DataContext="{Binding SelectedItems, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Selector}}}">
                <MenuItem Header="Open Selected" CommandParameter="{Binding}"
                  Command="{Binding Path=Data.OpenSelectedCodicesCommand, Source={StaticResource CodexProxy}}"/>
                <MenuItem Header="Bulk Edit" CommandParameter="{Binding}"
                  Command="{Binding Path=Data.EditCodicesCommand, Source={StaticResource CodexProxy}}"/>
                <MenuItem Header="Move All to Collection" ItemsSource="{Binding Path=DataContext.MVM.CollectionDirectories,
                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="MenuItem.Command" Value="{Binding Path=Data.MoveToCollectionCommand, Source={StaticResource CodexProxy}}"/>
                            <Setter Property="MenuItem.CommandParameter">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource MultiParamConverter}">
                                        <Binding Path="Header" RelativeSource="{RelativeSource self}"/>
                                        <Binding Path="SelectedItems" RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Selector}}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="Delete All" CommandParameter="{Binding}"
                  Command="{Binding Path=Data.DeleteCodexCommand, Source={StaticResource CodexProxy}}"/>
            </ContextMenu>
        </DataGrid.Resources>
        <DataGrid.ItemContainerStyle>
            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
            </Style>
        </DataGrid.ItemContainerStyle>
        <DataGrid.RowStyle>
            <Style TargetType="{x:Type DataGridRow}">
                <EventSetter Event="Control.MouseDoubleClick" Handler="HandleDoubleClick" />
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="ContextMenu" Value="{StaticResource MultiCodexContextMenu}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border" BorderThickness="0" SnapsToDevicePixels="True" 
                                    CornerRadius="5" Background="{TemplateBinding Background}">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="0"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, 
                                        Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource ListSelected}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ListHover}"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="1">
                        <Setter Property="ContextMenu" Value="{StaticResource CodexContextMenu}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </DataGrid.RowStyle>
        <DataGrid.Columns>
            <DataGridTemplateColumn Header="TITLE" Width="3*" MinWidth="100" CanUserSort="True" SortMemberPath="SortingTitle"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowTitle, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text ="{Binding Title}" Style="{StaticResource default}" Margin="5,0"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="AUTHORS" Width="2*" MinWidth="100" CanUserSort="True" SortMemberPath="AuthorsAsString"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowAuthor, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text ="{Binding AuthorsAsString}" Style="{StaticResource default}"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="PUBLISHER" Width="2*" MinWidth="100" CanUserSort="True" SortMemberPath="Publisher"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowPublisher, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text ="{Binding Publisher}" Style="{StaticResource default}"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="RELEASE DATE" Width="*" MinWidth="100" CanUserSort="True" SortMemberPath="ReleaseDate"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowReleaseDate, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text ="{Binding ReleaseDate, StringFormat=dd/MM/yyyy}" Style="{StaticResource default}"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="VERSION" Width="*" MinWidth="20"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowVersion, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text ="{Binding Version}" Style="{StaticResource default}"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="RATING" Width="*" CanUserSort="True" SortMemberPath="Rating" MinWidth="120"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowRating, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <materialDesign:RatingBar Value ="{Binding Rating,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" RenderTransformOrigin="0.5,0.5">
                            <materialDesign:RatingBar.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </TransformGroup>
                            </materialDesign:RatingBar.RenderTransform>
                        </materialDesign:RatingBar>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="TAGS" Width="5*"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowTags, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding Tags}" Background="Transparent" BorderBrush="{x:Null}" ItemTemplate="{StaticResource TagTemplate}"
                                                        Foreground="Black" FontSize="14" VerticalAlignment="Center">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <!--<DataGridTextColumn Width="*"/>-->
            <DataGridTemplateColumn Header="" MinWidth="70" Width="*" CanUserResize="False"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowFileIcons, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel x:Name="OwnedIconsStackPanel" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Command="{Binding Path=Data.OpenCodexLocallyCommand, Source={StaticResource CodexProxy}}"
                                    CommandParameter="{Binding}" Style="{StaticResource IconBtn}" Tools:AP.IconKind="FileOutline"/>
                            <Button Command="{Binding Path=Data.OpenCodexOnlineCommand, Source={StaticResource CodexProxy}}"
                                    CommandParameter="{Binding}" Style="{StaticResource IconBtn}" Tools:AP.IconKind="Web"/>
                            <materialDesign:PackIcon Kind="Bookshelf" Visibility="{Binding Path=Physically_Owned,
                                Converter={StaticResource ToVisibilityConverter}}"/>
                        </StackPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="" Width="25" MinWidth="25" CanUserResize="False"
                                    Visibility="{Binding Source={StaticResource LayoutProxy}, Path=Data.ShowEditIcon, Converter={StaticResource ToVisibilityConverter}}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Button Command="{Binding Path=Data.EditCodexCommand,Source={StaticResource CodexProxy}}">
                            <materialDesign:PackIcon Kind="Pencil"/>
                        </Button>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
        </DataGrid.Columns>
    </Controls:EnhancedDataGrid>

</UserControl>
