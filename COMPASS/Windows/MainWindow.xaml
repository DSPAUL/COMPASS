<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:COMPASS"
        x:Class="COMPASS.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:views="clr-namespace:COMPASS.Views"
        xmlns:viewmodels="clr-namespace:COMPASS.ViewModels"
        xmlns:Tools ="clr-namespace:COMPASS.Tools"
        xmlns:Converters ="clr-namespace:COMPASS.Tools.Converters"
        xmlns:CustomControls ="clr-namespace:COMPASS.Resources.Controls"
        mc:Ignorable="d"
        Title="COMPASS" Height="540" Width="960" FontSize="20"
        Foreground="White" Icon="/Icons/compass_new.ico"
        Closing="Window_Closing" WindowState="Maximized" WindowStyle="None" 
        WindowStartupLocation="CenterScreen" MouseDown="Window_MouseDown">
    <Window.Resources>
        <Converters:StringtoVisibiltyConverter x:Key="StringtoVisibilityConverter"/>
        <Converters:BooltoVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:WindowStatetoBoolConverter x:Key="IsMaximizedConverter"/>
        <DataTemplate DataType="{x:Type viewmodels:FileListViewModel}">
            <views:FileListView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:FileMixViewModel}">
            <views:FileMixView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:FileTileViewModel}">
            <views:FileTileView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:TagsFiltersViewModel}">
            <views:Tag_FilterView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:TagEditViewModel}">
            <views:TagEditView DataContext="{Binding}"/>
        </DataTemplate>
    </Window.Resources>
    <Window.Background>
        <!--<ImageBrush ImageSource="C:\Users\pauld\Pictures\Wallpapers\neverwinter_seascape.jpg" Opacity="0.6"/>-->
        <SolidColorBrush Color="#FF242528"/>
        <!--<LinearGradientBrush EndPoint="0.8,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0.0" Opacity="0.4">
            <GradientStop Color="#FF183DE9"/>
            <GradientStop Color="#FFF10927" Offset="1"/>
        </LinearGradientBrush>-->
        <!--<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="#FF1DA1F2"/>
            <GradientStop Color="#FF15202B" Offset="1"/>
        </LinearGradientBrush>-->
    </Window.Background>
    <Window.Style>
        <Style>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                CornerRadius="2"
                GlassFrameThickness="0"
                NonClientFrameEdges="None"
                ResizeBorderThickness="3"/> 
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Border BorderThickness="0">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!-- Add to avoid border disappearing when window is maximised -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Maximized">
                        <Setter Property="Margin" Value="7"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Normal">
                        <Setter Property="Margin" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid Name="MainGrid" Focusable="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width ="0"/>
            <ColumnDefinition Width ="auto"/>
            <ColumnDefinition Width ="auto"/>
            <ColumnDefinition Width ="*"/>
            <ColumnDefinition Width ="auto"/>
            <ColumnDefinition Width ="5"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--#region Top Bar-->
        <Grid Grid.ColumnSpan="7" x:Name="WindowsBar" 
              MouseDown="WindowsBar_MouseDown" MouseMove="OnMouseMove">
            <Grid.Background>
                <SolidColorBrush Color="#5E5E5E"/>
            </Grid.Background>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width ="auto"/>
                <ColumnDefinition Width ="auto"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Margin="10,0">
                <Image Source="/Icons/Compass_new.png" Width="35" SnapsToDevicePixels="True"/>
                <TextBlock Text="COMPASS" VerticalAlignment="Center" Margin="10,0"/>
            </StackPanel>

            <Border Grid.Column="1" CornerRadius="15" MinWidth="200"
                        Background="#FFB7B7B7" OpacityMask="#FF222222" Margin="30,5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width ="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Search"  Margin="10,0,0,0"
                               Visibility="{Binding FilterHandler.SearchTerm, Converter={StaticResource StringtoVisibilityConverter}}"/>
                    <TextBox Grid.Column="0" x:Name="Searchbox" Margin="10,0,0,0"
                             Text="{Binding FilterHandler.SearchTerm, UpdateSourceTrigger=PropertyChanged}" 
                             Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363" />
                    <materialDesign:PackIcon Kind="Search" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" 
                                Margin="0,0,10,0" Grid.Column="1"/>
                </Grid>
            </Border>

            <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Stretch" Grid.Column="3">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" >
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Padding" Value="7"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}" >
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Padding" Value="7"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <Button x:Name="MinimizeButton"
                        Click="MinimizeWindow" BorderBrush="{x:Null}">
                    <materialDesign:PackIcon Kind="WindowMinimize" VerticalAlignment="Bottom"/>
                </Button>

                <ToggleButton x:Name="MaximizeButton" IsChecked="{Binding WindowState, RelativeSource={RelativeSource FindAncestor,
                        AncestorType=Window}, Converter={StaticResource IsMaximizedConverter}, Mode=TwoWay}"
                        BorderBrush="{x:Null}" >
                    <Grid>
                        <materialDesign:PackIcon Kind="WindowMaximize"  x:Name="Maximizeimage" Width="15"
                          Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor,
                            AncestorType={x:Type ToggleButton}}, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=true}"/>
                        <materialDesign:PackIcon Kind="WindowRestore"  x:Name="NotMaximizeimage" Width="15"
                            Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor,
                            AncestorType={x:Type ToggleButton}}, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=false}"/>
                    </Grid>
                </ToggleButton>

                <Button x:Name="CloseButton"
                        Click="CloseButton_Click" BorderBrush="{x:Null}">
                    <materialDesign:PackIcon Kind="WindowClose"/>
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
        <!--#endregion-->

        <!--#region Left Dock-->
        <Grid Grid.Column="2" Grid.Row="1" Background="#6C6C6C">
            <Grid.Resources>
                <Style TargetType="{x:Type Button}" x:Key="SquareBtn">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Foreground" Value="#FFF3F3F3"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="7" HorizontalAlignment="Stretch">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <materialDesign:PackIcon Height="30" Margin="0,0,10,0"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}"/>
                                        <ContentPresenter VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FF999999" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                    <Style TargetType="{x:Type CustomControls:ExpandingButton}">
                        <Setter Property="Margin" Value="10,4"/>
                    </Style>
                <Style TargetType="{x:Type TabControl}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border>
                                        <UniformGrid x:Name="HeaderPanel" IsItemsHost="True" 
                                     Rows="1" />
                                    </Border>

                                    <Border x:Name="Border" Grid.Row="1" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width =" auto"/>
                <ColumnDefinition Width ="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>

            <UserControl Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Content="{Binding TFViewModel}"/>
            

            <Rectangle Grid.ColumnSpan="10" Grid.Row="1" Fill="#FFB9B9B9" Height="3" Margin="0,10"/>
            

            <CustomControls:ExpandingButton Grid.Column="1" Grid.Row="2" HiddenContent="{Binding AddTagViewModel}">
                <CustomControls:ExpandingButton.Toggle>
                    <Button Tools:AP.IconKind="TagPlusOutline" Style="{StaticResource SquareBtn}" 
                            Content="Add Tag" Command="{Binding AddTagCommand}"/>
                </CustomControls:ExpandingButton.Toggle>
            </CustomControls:ExpandingButton>

                <CustomControls:ExpandingButton Grid.Column="1" Grid.Row="3">
                    <CustomControls:ExpandingButton.Toggle>
                        <Button Tools:AP.IconKind="FileImportOutline" 
                                Style="{StaticResource SquareBtn}" Content="Import"/>
                    </CustomControls:ExpandingButton.Toggle>
                    <CustomControls:ExpandingButton.HiddenContent>
                        <StackPanel>
                            <Button Tools:AP.IconKind="FilePdfOutline" Style="{StaticResource SquareBtn}" Content="From PDF"
                                    Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+ImportMode.Pdf}"/>
                            <Button Tools:AP.IconKind="FilePlusOutline" Style="{StaticResource SquareBtn}" Content="Manual"
                                    Command="{Binding ImportFilesCommand}" CommandParameter="{x:Static Tools:Enums+ImportMode.Manual}"/>
                        </StackPanel>
                    </CustomControls:ExpandingButton.HiddenContent>
                </CustomControls:ExpandingButton>

                <Button x:Name="SettingsBtn" Grid.Column="1" Grid.Row="4" Style="{StaticResource SquareBtn}"
                    Tools:AP.IconKind="Settings" Content="Settings" Margin="10,4"/>

            
        </Grid>
        <!--#endregion-->

        <!--#region Main Dock-->
        <Grid x:Name="ViewsGrid" Grid.Column="3" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width ="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0" />
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>

            <!--#region View Selection-->
            <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Horizontal">
                <Button Background="{x:Null}" BorderBrush="{x:Null}"
                        Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+FileView.ListView}">
                    <materialDesign:PackIcon Kind="ViewHeadline" Width="45" Height="45"/>
                </Button>
                <Button Background="{x:Null}" BorderBrush="{x:Null}" 
                        Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+FileView.MixView}">
                    <materialDesign:PackIcon Kind="ViewList" Width="45" Height="45"/>
                </Button>
                <Button Background="{x:Null}" BorderBrush="{x:Null}"
                        Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+FileView.TileView}">
                    <materialDesign:PackIcon Kind="ViewModule" Width="45" Height="45"/>
                </Button>
                <Rectangle Width="3" Fill="Gray" Margin="3,8"/>
                <Button Background="{x:Null}" BorderBrush="{x:Null}" Click="ViewConfig_Click">
                    <materialDesign:PackIcon Kind="Tune" Width="35" Height="35"/>
                        <Button.ContextMenu>
                            <ContextMenu IsEnabled="True" Placement="Bottom" ItemsSource="{Binding CurrentFileViewModel.ViewOptions}"
                                         Style="{StaticResource DropdownMenu}" ItemContainerStyle="{StaticResource DropdownMenuItem}"/>
                        </Button.ContextMenu>
                </Button>
            </StackPanel>
            <!--#endregion-->

            <!--#region Current Filters-->
            <TextBlock Grid.Column="0" Grid.Row="1" x:Name="CurrentTagTextBlock" Text="Filters:" Margin="10,0" VerticalAlignment="Center"/>
            <Border CornerRadius="5" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row ="1"
                    Margin="0,10" Background="#FF565656">
                <Grid>
                    <ListBox x:Name="CurrentTagList" ItemsSource="{Binding FilterHandler.ActiveTags}" BorderBrush="{x:Null}" 
                     SelectionChanged="ActiveTag_Click" Background="{x:Null}" ItemTemplate="{StaticResource TagTemplate}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" MaxWidth="{Binding ActualWidth, ElementName=CurrentTagList}"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    <Button x:Name="ResetBtn" Command="{Binding ResetCommand}" Margin="10,0"
                        Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="30">
                        <materialDesign:PackIcon Kind="WindowClose"/>
                    </Button>
                </Grid>
            </Border>
            <!--#endregion-->

            <ContentControl Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="4"
                            Content="{Binding CurrentFileViewModel}"/>
        
        </Grid>
        <!--#endregion-->
    </Grid>
    </Border>
    
</Window>
    
 
