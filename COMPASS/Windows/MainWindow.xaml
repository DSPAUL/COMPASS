<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:COMPASS"
        x:Class="COMPASS.MainWindow"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:views="clr-namespace:COMPASS.Views"
        xmlns:viewmodels="clr-namespace:COMPASS.ViewModels"
        xmlns:Tools ="clr-namespace:COMPASS.Tools"
        xmlns:Converters ="clr-namespace:COMPASS.Tools.Converters"
        mc:Ignorable="d"
        Title="COMPASS" Height="540" Width="960" FontSize="20"
        Foreground="White" Icon="/Icons/compass_new.ico"
        Closing="Window_Closing" WindowState="Maximized" WindowStyle="None" 
        WindowStartupLocation="CenterScreen" MouseDown="Window_MouseDown">
    <Window.Resources>
        <Converters:StringtoVisibiltyConverter x:Key="StringtoVisibilityConverter"/>
        <Converters:BooltoVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:WindowStatetoBoolConverter x:Key="IsMaximizedConverter"/>
        <DataTemplate DataType="{x:Type viewmodels:FileListViewModel}">
            <views:FileListView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:FileMixViewModel}">
            <views:FileMixView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:FileTileViewModel}">
            <views:FileTileView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:TagsFiltersViewModel}">
            <views:Tag_FilterView DataContext="{Binding}"/>
        </DataTemplate>
    </Window.Resources>
    <Window.Background>
        <!--<ImageBrush ImageSource="C:\Users\pauld\Pictures\Wallpapers\neverwinter_seascape.jpg" Opacity="0.6"/>-->
        <SolidColorBrush Color="#FF242528"/>
        <!--<LinearGradientBrush EndPoint="0.8,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0.0" Opacity="0.4">
            <GradientStop Color="#FF183DE9"/>
            <GradientStop Color="#FFF10927" Offset="1"/>
        </LinearGradientBrush>-->
        <!--<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="#FF1DA1F2"/>
            <GradientStop Color="#FF15202B" Offset="1"/>
        </LinearGradientBrush>-->
    </Window.Background>
    <Window.Style>
        <Style>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                CornerRadius="2"
                GlassFrameThickness="0"
                NonClientFrameEdges="None"
                ResizeBorderThickness="3"/> 
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Border BorderThickness="0">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!-- Add to avoid border disappearing when window is maximised -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Maximized">
                        <Setter Property="Margin" Value="7"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Normal">
                        <Setter Property="Margin" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid Name="MainGrid" Focusable="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width ="0"/>
            <ColumnDefinition Width ="auto"/>
            <ColumnDefinition Width ="auto"/>
            <ColumnDefinition Width ="*"/>
            <ColumnDefinition Width ="auto"/>
            <ColumnDefinition Width ="5"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--#region Top Bar-->
        <Grid Grid.ColumnSpan="7" x:Name="WindowsBar" 
              MouseDown="WindowsBar_MouseDown" MouseMove="OnMouseMove">
            <Grid.Background>
                <SolidColorBrush Color="#5E5E5E"/>
            </Grid.Background>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width ="auto"/>
                <ColumnDefinition Width ="auto"/>
                <ColumnDefinition Width ="*"/>
                <ColumnDefinition Width ="auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Margin="10,0">
                <Image Source="/Icons/Compass_new.png" Width="35" SnapsToDevicePixels="True"/>
                <TextBlock Text="COMPASS" VerticalAlignment="Center" Margin="10,0"/>
            </StackPanel>

            <Border Grid.Column="1" CornerRadius="15" MinWidth="200"
                        Background="#FFB7B7B7" OpacityMask="#FF222222" Margin="30,5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width ="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Search"  Margin="10,0,0,0"
                               Visibility="{Binding FilterHandler.SearchTerm, Converter={StaticResource StringtoVisibilityConverter}}"/>
                    <TextBox Grid.Column="0" x:Name="Searchbox" Margin="10,0,0,0"
                             Text="{Binding FilterHandler.SearchTerm, UpdateSourceTrigger=PropertyChanged}" 
                             Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363" />
                    <materialDesign:PackIcon Kind="Search" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" 
                                Margin="0,0,10,0" Grid.Column="1"/>
                </Grid>
            </Border>

            <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Stretch" Grid.Column="3">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" >
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Padding" Value="7"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}" >
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Padding" Value="7"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <Button x:Name="MinimizeButton"
                        Click="MinimizeWindow" BorderBrush="{x:Null}">
                    <materialDesign:PackIcon Kind="WindowMinimize" VerticalAlignment="Bottom"/>
                </Button>

                <ToggleButton x:Name="MaximizeButton" IsChecked="{Binding WindowState, RelativeSource={RelativeSource FindAncestor,
                        AncestorType=Window}, Converter={StaticResource IsMaximizedConverter}, Mode=TwoWay}"
                        BorderBrush="{x:Null}" >
                    <Grid>
                        <materialDesign:PackIcon Kind="WindowMaximize"  x:Name="Maximizeimage" Width="15"
                          Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor,
                            AncestorType={x:Type ToggleButton}}, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=true}"/>
                        <materialDesign:PackIcon Kind="WindowRestore"  x:Name="NotMaximizeimage" Width="15"
                            Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor,
                            AncestorType={x:Type ToggleButton}}, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=false}"/>
                    </Grid>
                </ToggleButton>

                <Button x:Name="CloseButton"
                        Click="CloseButton_Click" BorderBrush="{x:Null}">
                    <materialDesign:PackIcon Kind="WindowClose"/>
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
        <!--#endregion-->

        <!--#region Left Dock-->
        <Grid Grid.Column="2" Grid.Row="1" Background="#6C6C6C">
            <Grid.Resources>
                <Style TargetType="{x:Type Button}" x:Key="SquareBtn">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Foreground" Value="#FFF3F3F3"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                    <Setter Property="Margin" Value="10,3"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="7" HorizontalAlignment="Stretch">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <materialDesign:PackIcon Height="30" Margin="0,0,10,0"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Tools:AP.IconKind)}"/>
                                        <ContentPresenter VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#FF999999" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type TabControl}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border>
                                        <UniformGrid x:Name="HeaderPanel" IsItemsHost="True" 
                                     Rows="1" />
                                    </Border>

                                    <Border x:Name="Border" Grid.Row="1" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width =" auto"/>
                <ColumnDefinition Width ="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>

            <UserControl Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Content="{Binding TFViewModel}"/>
            

            <Rectangle Grid.ColumnSpan="10" Grid.Row="1" Fill="#FFB9B9B9" Height="3" Margin="0,10"/>
            
            <Button x:Name="AddtagBtn" Grid.Column="1" Grid.Row="2" Tools:AP.IconKind="TagPlusOutline"
                    Click="Addtag_Click" Style="{StaticResource SquareBtn}" Content="Add Tag"/>
            
            <Button x:Name="ImportBtn" Grid.Column="1" Grid.Row="3" Tools:AP.IconKind="FileImportOutline"
                        Click="ImportBtn_Click" Style="{StaticResource SquareBtn}" Content="Import"/>

            <Button x:Name="SettingsBtn" Grid.Column="1" Grid.Row="4" Style="{StaticResource SquareBtn}"
                    Tools:AP.IconKind="Settings" Content="Settings"/>

            <!--#region Add Tag Popup-->
            <Grid Grid.Row="1" Grid.Column="1" Margin="5"
                    VerticalAlignment="Bottom" x:Name="TagCreation" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Border CornerRadius="15" Background="White">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type Button}" x:Key="CheckedRound">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border CornerRadius="15" Background="#FF1CE81C" Margin="5,0">
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,2">
                                                    <materialDesign:PackIcon Kind="Check"/>
                                                    <TextBlock Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Foreground="White"/>
                                                </StackPanel>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="{x:Type Button}" x:Key="CrossRound">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border CornerRadius="15" Background="#FFEB1313" Margin="5,0">
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,2">
                                                    <materialDesign:PackIcon Kind="WindowClose"/>
                                                    <TextBlock Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Foreground="White"/>
                                                </StackPanel>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid  x:Name="TagCreationMain">
                            <Grid.Resources>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="FontSize" Value="13"/>
                                    <Setter Property="Margin" Value="10,0,0,0"/>
                                </Style>
                            </Grid.Resources>

                            <Grid.RowDefinitions>
                                <RowDefinition Height =" 10"/>
                                <RowDefinition Height =" auto"/>
                                <RowDefinition Height =" auto"/>
                                <RowDefinition Height =" auto"/>
                                <RowDefinition Height =" auto"/>
                                <RowDefinition Height =" auto"/>
                                <RowDefinition Height =" 10"/>
                            </Grid.RowDefinitions>

                            <Label Content="Tag Name:" Grid.Row="1"/>
                            <Border Margin="10,0" Grid.Row="2" Background="#FF575757" CornerRadius="10">
                                <TextBox x:Name="TagNameTextBlock" KeyDown="TagNameTextBlock_KeyDown" BorderBrush="{x:Null}"
                                     Background="{x:Null}" Foreground="White"/>
                            </Border>
                            <StackPanel Grid.Row="3" Orientation="Horizontal">
                                <Label Content="Color:"/>
                                <Button x:Name="ShowColorSelection" Click="ShowColorSelection_Click">
                                    <Button.Background>
                                        <SolidColorBrush Color="{Binding SelectedColor, ElementName=ColorSelector}"/>
                                    </Button.Background>
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Border Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" 
                                                    Width="60" Height="15" CornerRadius="8" BorderBrush="Black" BorderThickness="0.5" />
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </StackPanel>
                            <StackPanel Grid.Row="4" Orientation="Horizontal" x:Name="ParentSelectionPanel">
                                <Label Content="Parent:"/>
                                <Button x:Name="ShowParentSelection" Click="ShowParentSelection_Click" BorderBrush="{x:Null}"
                                        FontSize="13" Foreground="White" Margin="5,0" Background="{x:Null}">
                                    <Border CornerRadius="8">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding BackgroundColor, FallbackValue=Black}"/>
                                        </Border.Background>
                                        <TextBlock Text="{Binding Content, FallbackValue='None'}"
                                                           VerticalAlignment="Center" Margin="5,0"/>
                                    </Border>
                                </Button>
                                <Button x:Name="ClearParent" Click="ClearParent_Click"  Background="{x:Null}"
                                    BorderBrush="{x:Null}" VerticalAlignment="Center">
                                    <Border Background="Red" CornerRadius="10" Width="20">
                                        <materialDesign:PackIcon Kind="WindowClose"/>
                                    </Border>
                                </Button>
                            </StackPanel>
                            <Button Grid.Row="5" Style="{StaticResource CheckedRound}" Content="Create Tag"
                                    x:Name="CreateTagBtn" Click="CreateTagBtn_Click"/>
                        </Grid>
                        <ScrollViewer x:Name="ParentSelection" PreviewMouseWheel="ParentSelectionScroll_PreviewMouseWheel" Visibility="Collapsed"
                                      MaxHeight="{Binding ActualHeight, ElementName=TagTree}">
                            <StackPanel>
                                <TreeView x:Name="ParentSelectionTree" BorderBrush="{x:Null}"
                                    ItemsSource="{Binding}"
                                    Background="{x:Null}" SelectedItemChanged="ShowParentSelection_Click"
                                    HorizontalAlignment="Left">
                                    <TreeView.Resources>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="IsExpanded" Value="True"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="BorderBrush" Value="Black"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TreeView.Resources>
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate DataType="{x:Type local:Tag}" ItemsSource="{Binding Items}">
                                            <Border CornerRadius="10" Margin="0,3">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{Binding BackgroundColor}"/>
                                                </Border.Background>
                                                <TextBlock Text="{Binding Content}" Margin="10,2" Foreground="White" FontSize="13"/>
                                            </Border>
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                                <Button Click="ShowParentSelection_Click" Content="Cancel" Style="{StaticResource CrossRound}"
                                    Margin="5"/>
                            </StackPanel>
                        </ScrollViewer>
                        <StackPanel Grid.Column="1" x:Name="ColorSelection" Visibility="Collapsed">
                            <xctk:ColorCanvas Grid.Column="1" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}"
                                          x:Name="ColorSelector"/>
                            <Button Style="{StaticResource CheckedRound}" Content="Select Color"
                                    Click="ShowColorSelection_Click" Margin="5" />
                        </StackPanel>

                    </Grid>
                </Border>
                <Path Grid.Row="2" Data="M 0,0 L 15,15 L 30,0 L 0,0" HorizontalAlignment="Center" Fill="White"
                      StrokeThickness="0" Stroke="Black" Panel.ZIndex="1" VerticalAlignment="Top"/>
            </Grid>
            <!--#endregion-->
        </Grid>
        <!--#endregion-->

        <!--#region Main Dock-->
        <Grid x:Name="ViewsGrid" Grid.Column="3" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width ="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0" />
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>

            <!--#region View Selection-->
            <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Horizontal">
                <Button Background="{x:Null}" BorderBrush="{x:Null}"
                        Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+FileView.ListView}">
                    <materialDesign:PackIcon Kind="ViewHeadline" Width="45" Height="45"/>
                </Button>
                <Button Background="{x:Null}" BorderBrush="{x:Null}" 
                        Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+FileView.MixView}">
                    <materialDesign:PackIcon Kind="ViewList" Width="45" Height="45"/>
                </Button>
                <Button Background="{x:Null}" BorderBrush="{x:Null}"
                        Command="{Binding ChangeFileViewCommand}" CommandParameter="{x:Static Tools:Enums+FileView.TileView}">
                    <materialDesign:PackIcon Kind="ViewModule" Width="45" Height="45"/>
                </Button>
                <Rectangle Width="3" Fill="Gray" Margin="3,8"/>
                <Button Background="{x:Null}" BorderBrush="{x:Null}">
                    <materialDesign:PackIcon Kind="Tune" Width="35" Height="35"/>
                </Button>
            </StackPanel>
            <!--#endregion-->

            <!--#region Current Filters-->
            <TextBlock Grid.Column="0" Grid.Row="1" x:Name="CurrentTagTextBlock" Text="Filters:" Margin="10,0" VerticalAlignment="Center"/>
            <Border CornerRadius="15" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row ="1"
                    Margin="0,10" Background="#FF565656">
                <Grid>
                    <ListBox x:Name="CurrentTagList" ItemsSource="{Binding FilterHandler.ActiveTags}" BorderBrush="{x:Null}" 
                     SelectionChanged="ActiveTag_Click" Background="{x:Null}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" MaxWidth="{Binding ActualWidth, ElementName=CurrentTagList}"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border CornerRadius="10" Margin="0,3">
                                    <Border.Background>
                                        <SolidColorBrush Color="{Binding BackgroundColor}"/>
                                    </Border.Background>
                                    <TextBlock Text="{Binding Content}" Margin="10,2" Foreground="White" FontSize="13"/>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button x:Name="ResetBtn" Command="{Binding ResetCommand}" Margin="10,0"
                        Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="30">
                        <materialDesign:PackIcon Kind="WindowClose"/>
                    </Button>
                </Grid>
            </Border>
            <!--#endregion-->

            <ContentControl Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="4"
                            Content="{Binding CurrentFileViewModel}"/>
        
        </Grid>
        <!--#endregion-->
    </Grid>
    </Border>
    
</Window>
    
 
