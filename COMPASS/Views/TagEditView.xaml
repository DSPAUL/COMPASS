<UserControl x:Class="COMPASS.Views.TagEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:Converters="clr-namespace:COMPASS.Tools.Converters"
            xmlns:Tools="clr-namespace:COMPASS.Tools"
            xmlns:Models="clr-namespace:COMPASS.Models"
            xmlns:CustomControls ="clr-namespace:COMPASS.Resources.Controls"
            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="500">
    <Grid Name="MainGrid" Focusable="True" MouseDown="MainGrid_MouseDown">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <ControlTemplate x:Key="Btn" TargetType="Button">
                <Border Background="{TemplateBinding Background}" CornerRadius="5" Margin="3">
                    <ContentPresenter Margin="7,2" HorizontalAlignment="Center" TextBlock.Foreground="White"/>
                </Border>
            </ControlTemplate>
            <Style TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Template" Value="{StaticResource  Btn}"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Margin" Value="3,0"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <HierarchicalDataTemplate x:Key="RegularTag" DataType="{x:Type Models:TreeViewNode}" ItemsSource="{Binding Children}">
                <Border CornerRadius="5" Margin="0,3">
                    <Border.Background>
                        <SolidColorBrush Color="{Binding Tag.BackgroundColor}"/>
                    </Border.Background>
                    <TextBlock Text="{Binding Tag.Content}" Margin="10,2" Foreground="White" FontSize="13"/>
                </Border>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate x:Key="GroupTag" DataType="{x:Type Models:TreeViewNode}" ItemsSource="{Binding Children}">
                <Border CornerRadius="5" Margin="0,3" Background="{x:Null}">
                    <TextBlock Text="{Binding Tag.Content}" Margin="10,2" Foreground="LightGray" FontWeight="Bold" FontSize="15" Typography.Capitals="AllSmallCaps"/>
                </Border>
            </HierarchicalDataTemplate>
            <Tools:TagTemplateSelector x:Key="TagDataTemplateSelector"/>
            <Converters:BooltoVisibilityConverter x:Key ="BooltoVisibilityConverter"/>
        </Grid.Resources>
        <Grid  x:Name="InfoGrid" Visibility="{Binding ShowInfoGrid, Converter={StaticResource BooltoVisibilityConverter}}" Grid.Column ="0" Margin="10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height ="5"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" auto"/>
                <RowDefinition Height =" 10"/>
            </Grid.RowDefinitions>

            <Label Content="Tag Name:" Grid.Row="1"/>
            <Border Margin="10,0" Grid.Row="2" Background="{StaticResource UIElementBackground}" CornerRadius="2">
                <TextBox x:Name="TagNameTextBlock" BorderBrush="{x:Null}" FontSize="14"
                         Text="{Binding TempTag.Content, TargetNullValue=''}" Background="{x:Null}" Margin="2,0"/>
            </Border>
            <StackPanel Orientation="Horizontal" Grid.Row="3">
                <Label Content="Group Tag:"/>
                <CheckBox x:Name="IsGroupCheckBox" HorizontalAlignment="Right" IsChecked="{Binding TempTag.IsGroup}"/>
            </StackPanel>
            <StackPanel Grid.Row="4" Orientation="Horizontal" Visibility="{Binding ElementName=IsGroupCheckBox, Path=IsChecked, Converter= {StaticResource BooltoVisibilityConverter}, ConverterParameter=True}">
                <Label Content="Color:"/>
                <ToggleButton x:Name="ShowColorSelection" IsChecked="{Binding ShowColorSelection, Mode=TwoWay}">
                    <ToggleButton.Background>
                        <SolidColorBrush Color="{Binding TempTag.BackgroundColor, TargetNullValue=Black, FallbackValue=Black}"/>
                    </ToggleButton.Background>
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Border Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" 
                                    Width="60" Height="15" CornerRadius="8"/>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </StackPanel>
            <StackPanel Grid.Row="5" Orientation="Horizontal">
                <Label Content="Parent:"/>
                <Border CornerRadius="5" Margin="0,5" x:Name="ShowParentSelectionBorder">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ParentTempTag.IsGroup}" Value="True">
                                    <Setter Property="Background" Value="{x:Null}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ParentTempTag.IsGroup}" Value="False">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{Binding ParentTempTag.BackgroundColor}"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <ToggleButton x:Name="ShowParentSelectionBtn" IsChecked="{Binding ShowParentSelection, Mode=TwoWay}"
                                        FontSize="13" VerticalContentAlignment="Bottom" Margin="5,0" Foreground="White"
                                  Content="{Binding ParentTempTag.Content, TargetNullValue='None', FallbackValue='None'}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentTempTag.IsGroup}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource TextMutedColor}"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>
                                        <Setter Property="FontSize" Value="15"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentTempTag.IsGroup}" Value="False">
                                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <ToggleButton.Template>
                            <ControlTemplate>
                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}"
                                           FontWeight="{Binding FontWeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}"
                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}"
                                           />
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                </Border>
                <Button x:Name="ClearParent" Command="{Binding ClearParentCommand}"
                         BorderBrush="{x:Null}" Width="40" VerticalAlignment="Center" Background="{StaticResource SelectableTransparent}">
                    <materialDesign:PackIcon Kind="WindowClose"/>
                </Button>
            </StackPanel>
            <Grid Grid.Row="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Background="{StaticResource AcceptFill}" x:Name="OKBtn" Command="{Binding OKCommand}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Check"/>
                        <TextBlock Text="OK" FontSize="15"/>
                    </StackPanel>
                </Button>
                <Button Grid.Column="1" Name="CancelBtn" Command ="{Binding CancelCommand}" Background="{StaticResource CancelFill}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="WindowClose"/>
                        <TextBlock Text="Cancel" FontSize="15"/>
                    </StackPanel>
                </Button>
            </Grid>
        </Grid>
        <ScrollViewer x:Name="ParentSelection" PreviewMouseWheel="ParentSelection_PreviewMouseWheel" Grid.Column="1" MaxHeight="500"
                      Visibility="{Binding ShowParentSelection, Converter={StaticResource BooltoVisibilityConverter}, FallbackValue=Collapsed}">
            <StackPanel HorizontalAlignment="Center">
                <TreeView x:Name="ParentSelectionTree" BorderBrush="{x:Null}" ItemsSource="{Binding TreeViewSource}" ItemTemplateSelector="{StaticResource TagDataTemplateSelector}"
                                    Background="{x:Null}" HorizontalAlignment="Left" SelectedItemChanged="TagTree_SelectedItemChanged">
                    <TreeView.Resources>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.Resources>
                </TreeView>
                <Button Margin="5" Background="{StaticResource CancelFill}" Command="{Binding CancelParentSelectionCommand}" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="WindowClose"/>
                        <TextBlock Text="Cancel" FontSize="15"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </ScrollViewer>
        <StackPanel x:Name="ColorSelection" Grid.Column="2" Visibility="{Binding ShowColorSelection, Converter= {StaticResource BooltoVisibilityConverter}}">
            <CustomControls:ColorPicker Height="135" Width="166" 
                                        SelectedColor="{Binding TempTag.BackgroundColor, Mode=TwoWay, TargetNullValue=Black}"/>
            <Button Margin="5" Background="{StaticResource AcceptFill}" Command="{Binding CloseColorSelectionCommand}">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Check"/>
                    <TextBlock Text="Select Color"/>
                </StackPanel>
            </Button>
        </StackPanel>

    </Grid>
</UserControl>
